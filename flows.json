[
    {
        "id": "e7c83390c801a80d",
        "type": "tab",
        "label": "TEC1 Bot",
        "disabled": false,
        "info": ""
    },
    {
        "id": "cf6783623c678570",
        "type": "tab",
        "label": "TCP Handler",
        "disabled": false,
        "info": ""
    },
    {
        "id": "444ae17e1e6afb91",
        "type": "tab",
        "label": "Economy",
        "disabled": false,
        "info": ""
    },
    {
        "id": "3af95fce94a57f18",
        "type": "group",
        "z": "e7c83390c801a80d",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "c9bdc4eeb83f3a71",
            "ec49dc01b583d0e4",
            "517bbb6d2e99fc3f",
            "5cdbc691e12d63c8",
            "31c44dd228ad333a",
            "bc3a43f9d6f9371c",
            "7d298d037dcc0785",
            "2c73a6beb9f43f46",
            "12258a32cdc88aef",
            "8112e4f7214b8b1e",
            "03d4998c6b17607e",
            "13fb9857d3485ceb",
            "421399e29ada540b",
            "85880742b4c37395",
            "f4c50cb1a1fe8ad3",
            "3cc3e9ff918628ad",
            "2d9ca9775b011638",
            "7e29626803283419",
            "7aa28086f0582e47",
            "36c84a4cc647dda4",
            "befffd200c2bc714",
            "03ccdf7e64773ab5"
        ],
        "x": 1714,
        "y": 19
    },
    {
        "id": "f2e3944ec2e98a49",
        "type": "group",
        "z": "e7c83390c801a80d",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "7503c43e3cd8e8cd",
            "6d034e37778169b5",
            "3a043ad22e6494c3",
            "d088580c23909a11",
            "b1baf05ee55dcecd",
            "8c3a31adf4cfee8a",
            "cb64b9f593018214",
            "a1a35aa4a95f4777",
            "66910f23dd134c7a",
            "2958e4b1787ca703",
            "f2c452def360f9c9",
            "9a65bdf0fc49e6ba",
            "d5b3518a951b75de",
            "cef88909939db6b4",
            "fc12703b35502c02",
            "746c74e2d4f82cd2",
            "8bbd4682b1a627ac",
            "4543ef2791ad9a5a",
            "fbc67ae51119acec",
            "c143eda6c0664c67",
            "a72d7d9a4491ca5c",
            "f950f2df5481240c",
            "6c38e2ac9c58cc31",
            "4ddb0b41a3a8da7c",
            "bbac4561d745a0c1",
            "f246e5d69658806a",
            "6a4d348a423e1491",
            "c36899829074bf13",
            "4a823e8a271ef33d"
        ],
        "x": 1894,
        "y": 539
    },
    {
        "id": "42e0ca0b34b1ace9",
        "type": "group",
        "z": "e7c83390c801a80d",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "846b45e89f07638e",
            "62e6a7686260e20c",
            "97f850dee3c80351",
            "ceef083bbb5a5882",
            "1a9606d279ae8bfa",
            "b92e4d5a757aa9ee",
            "4a1cde2f6c3c5dd3",
            "f8bcf518c4d6a0d3",
            "543d8e64cb8b780e",
            "4f6c2a2ec6c139af",
            "83ab42e7ccbc87e0",
            "fb93372f3fa018f2",
            "744cda17e1eef0f0",
            "d24e807803192783",
            "bb481680c7838228",
            "a3ae95950a9ec97c"
        ],
        "x": 2694,
        "y": 19
    },
    {
        "id": "0a693ed80d2f4120",
        "type": "group",
        "z": "e7c83390c801a80d",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "a0afc63c51e60031",
            "71b5dff00ed10042",
            "a16c87c58967aa49",
            "eb3658ede499a134",
            "ede91e35096fa18d",
            "d8aec8dbbb245fd8",
            "670ab20c8c4c7c26",
            "5323bc0b2a2e2691",
            "9cb5f4eabd6c7153",
            "f1b7362c3fb12344",
            "873d8a2ace439507",
            "e401ee9388a4e28d",
            "3c6be5f5d7764be0",
            "deac0eb31c130764",
            "a48c2aed6e6dc586"
        ],
        "x": 2694,
        "y": 539
    },
    {
        "id": "f0dc09849048ecc9",
        "type": "group",
        "z": "e7c83390c801a80d",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "d999b58a89897bf5",
            "eab76b22e21e5e07",
            "75d727566cacab6f",
            "9a8ae406ad5e20a8",
            "611ccf94ab64161f",
            "0818dc81a8a04017",
            "9694163503016321",
            "aaea852441b4bcfe",
            "9263393f1b5c3a7c",
            "b9bca31a0e9de6c0",
            "8ab2a5cc7149c3cc",
            "81c0221d45cd243f",
            "9e6fc2ca03098c90",
            "e336f1bc7a2630db",
            "3650b8fff823bbbc",
            "4cdfa87d977b96c6"
        ],
        "x": 14,
        "y": 39
    },
    {
        "id": "59f969dbefde3c20",
        "type": "group",
        "z": "e7c83390c801a80d",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "71059a572e32d172",
            "b005d7a79f6cc721",
            "ae718095be210f28",
            "917f0638ce49c2db",
            "ace7eb5425392eb6",
            "d5d5f15b966575aa",
            "f9cd1cf436052c68"
        ],
        "x": 2554,
        "y": 1739
    },
    {
        "id": "935e59a53e14ca1a",
        "type": "group",
        "z": "e7c83390c801a80d",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "c4de4c55a7d8a5ec",
            "894a0b3429653a6e",
            "6aeca8586a5c8981",
            "cf0605e75fcda16a",
            "74e39d3374c18a3b",
            "e20fadcb84b3af7e",
            "1042a32bc4cf0ffd",
            "ac0107e358a6549f",
            "963fa2554cc12567",
            "d559745eea4ff202"
        ],
        "x": 2554,
        "y": 1559
    },
    {
        "id": "12435dd0704ed692",
        "type": "group",
        "z": "e7c83390c801a80d",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "ef5898da0ef9c5c2",
            "8f842eea6e492bf6",
            "30b0f4f49b6f63c7",
            "03114adbe6c1b33e",
            "2b1223d5c9b61ea4",
            "a8611ffabe878ad7",
            "2ee1aea256edcd58",
            "1ad79fc4ebe64019",
            "cd9178a79b592056",
            "b427359c5603a0d9",
            "dee631859d5073ed"
        ],
        "x": 314,
        "y": 2439
    },
    {
        "id": "6eb98fdfabd2b89e",
        "type": "group",
        "z": "e7c83390c801a80d",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "ddfc03d28f1f9009",
            "5bd1e88bf882bcc0",
            "01c77a7313acb0ea",
            "5120d294b5068e8e",
            "53fc821d9824b0a1",
            "c57d547bed19c3f2",
            "09499327219e7895",
            "a36e2c120de55427",
            "e5a769887b87fd39",
            "c34bc74925505dfc",
            "7f538c301c91ea60"
        ],
        "x": 314,
        "y": 2119
    },
    {
        "id": "f13b70955d462e75",
        "type": "group",
        "z": "e7c83390c801a80d",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "d10b4e684138237a",
            "0489064d8c34c5e1",
            "20cd440a60d08f68",
            "ca97f64c80e03149",
            "8caf47440d156ec5",
            "5a19164330c992dd",
            "546092f6ad7e17ab",
            "a53dab32327b99ac",
            "19a5e025f613ecfc",
            "bf6272bf00ea2bf0",
            "8e390dd4c4b0c4c3",
            "bc96117ebb3a0833",
            "18d91639341a4f7e",
            "9ab74c06076ff7af",
            "28ab5a9d48e45c0c"
        ],
        "x": 314,
        "y": 1079
    },
    {
        "id": "b36a1ae7d14f8198",
        "type": "group",
        "z": "e7c83390c801a80d",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "26ed40633166e090",
            "7406a409407d4cc1",
            "efb1e6b864de3a4d",
            "e248c92ab607f364",
            "cf5549fb5ce0239e",
            "8215dd1fc9665872",
            "9cfeebda0480709f",
            "7e42fa7e035a7f39",
            "98a83dfabb0e00bb",
            "437f2ced33b2c09e",
            "47f3282c27881050",
            "0249fbf976c5684c",
            "75875d1a13c4f3ef",
            "64cabd24ce831c11"
        ],
        "x": 314,
        "y": 699
    },
    {
        "id": "c58defa34619bed1",
        "type": "group",
        "z": "cf6783623c678570",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "f571a701c8eade82",
            "59708558768acf73",
            "960ffb812b58175a",
            "3ef4329bf93ca1c4",
            "e115397606bcc015",
            "d6bad227728d6424",
            "b16da2cc36bc87a7",
            "53538e4aa10c3508",
            "a3ef228f3ea0197d",
            "87ac5c256773c365",
            "42b4bd72e9117726",
            "3e020dc420936440",
            "5473cfceeba1dca2",
            "017bd3dc1581d8e7"
        ],
        "x": 114,
        "y": 19,
        "w": 1092,
        "h": 222
    },
    {
        "id": "d3b5dcf1216195f0",
        "type": "group",
        "z": "e7c83390c801a80d",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "b2ef73b93b171a38",
            "a040e13d90ebba7e",
            "43bd6aaf8c6a93a7",
            "700b0a18f669792e",
            "33c05c3ed8549326",
            "f984d2b7c6e0d1b2",
            "265d3eb51e402107",
            "e7bddbf4147893d6",
            "bd26f7462b25a921"
        ],
        "x": 1894,
        "y": 1179
    },
    {
        "id": "d31b319e0a98a425",
        "type": "group",
        "z": "e7c83390c801a80d",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "c80b73112ee98a88",
            "ac10961c22adb501",
            "e951bd47d2b1dbae",
            "c12c335c04b11519",
            "0b879b5dec9cb04f",
            "c505a268bc1f810e",
            "9f389076a9b6f73f",
            "2ac83c22d129027e",
            "3acc0d2a1d6808d1",
            "5c7d207a44f42aa3",
            "6b3a7ae32a3b68ce",
            "33d1d8df9440d575",
            "c94b0e292a3b7a6b",
            "a570cdd0a47f576a",
            "a9aee0e04ee1b5d6",
            "ef03767471d7eb8c",
            "5d0e430b6aa8b51f",
            "33dff353b4411c99",
            "29ac032cc0751b08",
            "8719de7f5a89d239",
            "de211fa98e101295",
            "dd8a48d47178cb22",
            "ce2adbabcfd9ccf5",
            "9cf5b0b92d40a5fb",
            "44b4c9a87f37ac13",
            "20216e30d555c1c3",
            "bab81dca438f4064"
        ],
        "x": 314,
        "y": 1419
    },
    {
        "id": "d943bdc9165c0a7c",
        "type": "group",
        "z": "444ae17e1e6afb91",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "ca025012d053dce4",
            "e0453946d36563d4",
            "96fad1634e6877cb",
            "e6709cc77734b8c0",
            "208fa2908592394d",
            "6b736c62f473a481",
            "bda9f0bcd0c7ce5d",
            "33f612bcf161341e",
            "36714cfa1c9af40e",
            "52ca7f127d8b5efc",
            "368c9b39c5923827"
        ],
        "x": 114,
        "y": 319
    },
    {
        "id": "058db8f4097386b6",
        "type": "group",
        "z": "444ae17e1e6afb91",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "4485eefb1a057ce5",
            "92dca865c2015a14",
            "1c02c61c6de09977",
            "dfb5527821bfee34",
            "fd0b33f75410a082",
            "2fef6db1bbe0f2b4",
            "2243594e1c9affaa",
            "b1d9d5edb5f642c0",
            "0eb3fd4ee110fc23",
            "02e0689261cc7220",
            "02be798431dca5e5"
        ],
        "x": 114,
        "y": 659
    },
    {
        "id": "79fa116804b14942",
        "type": "group",
        "z": "444ae17e1e6afb91",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "3fe467ba9bc5d523",
            "e0a704f5a7a3c5d9",
            "da133acacbacea90",
            "e7e76f2b439fc437",
            "df931e0fbaa62e10",
            "da79fba144ec6667",
            "6cbc646ca7283680",
            "1af0582272132dec",
            "7c8dc39c0787a8b5",
            "9632ecfc39a338dd",
            "4d8d03937ff91d7b",
            "8a887142bc8126b5",
            "a58e963d867a0e82",
            "3b223ac27bb8f2f8",
            "2eeb45a4aca74e7e"
        ],
        "x": 1834,
        "y": 39
    },
    {
        "id": "8b891dd4611c028d",
        "type": "group",
        "z": "444ae17e1e6afb91",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "64056f1001fb082a",
            "d46ef8c103502869",
            "c5099ac8a0952b16",
            "de1411a936bf16fa",
            "9da70ced5f3dd112",
            "5c9e59b139eec860",
            "409d7b7f76d25d6a",
            "0c14e1faa7d8baaa",
            "e4eee9c05cb37a3b",
            "c8624c97907f4139",
            "333c655abf0a0027"
        ],
        "x": 1754,
        "y": 319
    },
    {
        "id": "9947ed56b0b80a62",
        "type": "group",
        "z": "444ae17e1e6afb91",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "aa07c2913068413b",
            "e0cdca4251f55115",
            "6dbd63620c5c0eec",
            "ee7686d47d39d6e9",
            "64b041ea34487670",
            "84abeba949c892f6",
            "b6a5cc3f386e927e",
            "eeddc11f8399dcf8",
            "60fd57328c64690e",
            "91273fae1e26be37",
            "c2c413acbae5b288",
            "6f2b75efab86fc12",
            "e6098bd9e86da786"
        ],
        "x": 114,
        "y": -1
    },
    {
        "id": "7c72005ea0dd4a7e",
        "type": "group",
        "z": "e7c83390c801a80d",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "c6fea49f09e43e45",
            "d0fe9715cc7094b6",
            "2ec098f216d0be5a",
            "08afd010394fae7f",
            "fac8dec16290c99a",
            "9db907a0124a52fa",
            "a42794e6eceb5773",
            "6da5b1a2028ab12b",
            "8a9fff92d43419ec",
            "7566bd08b9e5dd36",
            "4ba7d7b524cf4dd7",
            "92b40d863658452c",
            "9bb2f5d70f755c29"
        ],
        "x": 314,
        "y": 419
    },
    {
        "id": "4d2d08a55c9a69ac",
        "type": "group",
        "z": "444ae17e1e6afb91",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "1630574840947d56",
            "9b906524a06e1441",
            "68c4a3f68c4aef42",
            "ee12473e41df7d1a",
            "b4a47a43a96b9456",
            "ab255d4894438926",
            "64d0352688361f73",
            "1cf8f7f6bf7fef1b",
            "ee2ec6f85b4450f5",
            "4d845909b0f03edf",
            "401ca76ea342303d",
            "c17ff235349b0b07"
        ],
        "x": 1814,
        "y": 899
    },
    {
        "id": "a385aff966834226",
        "type": "group",
        "z": "444ae17e1e6afb91",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "18e914640cedbac5",
            "e4fe920b0cd44ada",
            "794c568543378215",
            "9d119de6ad3207ed",
            "54857812edf230f3",
            "d254c30c3bba185b",
            "11c786d4f504a1dc",
            "d615305222b77a03",
            "982eb7c5a3f9f53b",
            "99a18ec8092a1dd4",
            "7a74cec96c8ef7f8",
            "bba79bf7d7eecca6",
            "470a2542d36d6fac",
            "5bdc18da5d68d744",
            "df5a81c626d2b2a0",
            "b709502fa82e7fb6",
            "b85a03d2b15f6cdd",
            "f59a1a21cb88911e",
            "bfb459561644e0cc"
        ],
        "x": 3174,
        "y": 19
    },
    {
        "id": "cd48672b90f76112",
        "type": "group",
        "z": "444ae17e1e6afb91",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "74bc674ecd0193ed",
            "3dae50d5e1def5b3",
            "347ab5e3c4d9500e",
            "1ee8dc5c40ef4155",
            "538d0fd533731f2f",
            "6146edfe8cde5ffe",
            "6ec2070892db473e",
            "dded4729d682b528",
            "32cc00b3781fce1a"
        ],
        "x": 3174,
        "y": 599
    },
    {
        "id": "bb2eaf1e481b717d",
        "type": "group",
        "z": "444ae17e1e6afb91",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "adc0dcd597f58d82",
            "7569842078811ca7",
            "da969102e4250c22",
            "dcedf4d73eeaec08",
            "23c4a386f2b9b724"
        ],
        "x": 4094,
        "y": 19
    },
    {
        "id": "27505ac0cc6d3b19",
        "type": "group",
        "z": "444ae17e1e6afb91",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "5d6f4bad5ea5f6c5",
            "c911001fb974c206",
            "aaa6cc45f419ba46",
            "b6257d163b4debaa",
            "52cbc964c738cf21"
        ],
        "x": 1814,
        "y": 1119
    },
    {
        "id": "a26a12c8442182ad",
        "type": "group",
        "z": "cf6783623c678570",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "dfbe641a58b09fbd",
            "aafa6f76d9109ab3",
            "055286a60a7df2a8",
            "88e25f27f1bdbe02",
            "c66cbcdfd144dacc",
            "7db129373035932c"
        ],
        "x": 1484,
        "y": 19,
        "w": 552,
        "h": 242
    },
    {
        "id": "6363ec22c866f790",
        "type": "ui_group",
        "name": "FTP Details",
        "tab": "71435652b50b9e7f",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "054e62be5c706d3c",
        "type": "ui_group",
        "name": "Discord Channel IDs",
        "tab": "71435652b50b9e7f",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "71435652b50b9e7f",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "85fa4088e73530eb",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "cdebc38f99ac001e",
        "type": "ui_group",
        "name": "Battlemetrics Setup",
        "tab": "71435652b50b9e7f",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "2118590cbe579670",
        "type": "sqlitedb",
        "db": "/data/scummunity.db",
        "mode": "RWC"
    },
    {
        "id": "5fe617e0c367d2ea",
        "type": "ui_group",
        "name": "Bot Steam ID",
        "tab": "71435652b50b9e7f",
        "order": 5,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "9e88f1a55d60cdcd",
        "type": "ui_group",
        "name": "Fetch Settings",
        "tab": "71435652b50b9e7f",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "934fbc5791d441db",
        "type": "discord-token",
        "name": "SCUMmunity Bot"
    },
    {
        "id": "2ef4773c15b78d51",
        "type": "ui_tab",
        "name": "Catalogue",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "ae3d3697f35388c4",
        "type": "ui_group",
        "name": "Add Pack",
        "tab": "2ef4773c15b78d51",
        "order": 1,
        "disp": true,
        "width": 12,
        "collapse": false
    },
    {
        "id": "f28a28bd30b4460a",
        "type": "ui_group",
        "name": "Available Packs",
        "tab": "2ef4773c15b78d51",
        "order": 4,
        "disp": true,
        "width": "24",
        "collapse": false
    },
    {
        "id": "625872f.40b1e8c",
        "type": "ui_group",
        "name": "Default",
        "tab": "58c2aa06.ef46e4",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "58c2aa06.ef46e4",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "6c1321da21bc9f11",
        "type": "ui_group",
        "name": "Delete Pack",
        "tab": "2ef4773c15b78d51",
        "order": 2,
        "disp": true,
        "width": 12,
        "collapse": false
    },
    {
        "id": "d25b860eb1737153",
        "type": "ui_group",
        "name": "Group 4",
        "tab": "2ef4773c15b78d51",
        "order": 3,
        "disp": false,
        "width": "24",
        "collapse": false
    },
    {
        "id": "57b601d5c10dc6ae",
        "type": "ui_spacer",
        "z": "444ae17e1e6afb91",
        "name": "spacer",
        "group": "6c1321da21bc9f11",
        "order": 2,
        "width": 12,
        "height": 1
    },
    {
        "id": "df5a4cfe167962d9",
        "type": "ui_spacer",
        "z": "444ae17e1e6afb91",
        "name": "spacer",
        "group": "6c1321da21bc9f11",
        "order": 3,
        "width": 12,
        "height": 1
    },
    {
        "id": "b000c5dbdbdfd2f8",
        "type": "ui_spacer",
        "z": "444ae17e1e6afb91",
        "name": "spacer",
        "group": "6c1321da21bc9f11",
        "order": 4,
        "width": 12,
        "height": 1
    },
    {
        "id": "9fa0f466b8329663",
        "type": "ui_spacer",
        "z": "444ae17e1e6afb91",
        "name": "spacer",
        "group": "6c1321da21bc9f11",
        "order": 5,
        "width": 12,
        "height": 1
    },
    {
        "id": "09070cb3d0bb4645",
        "type": "ui_spacer",
        "z": "444ae17e1e6afb91",
        "name": "spacer",
        "group": "6c1321da21bc9f11",
        "order": 6,
        "width": 12,
        "height": 1
    },
    {
        "id": "464afd1d7ca638ba",
        "type": "ui_spacer",
        "z": "444ae17e1e6afb91",
        "name": "spacer",
        "group": "d25b860eb1737153",
        "order": 4,
        "width": 1,
        "height": "1"
    },
    {
        "id": "d999b58a89897bf5",
        "type": "inject",
        "z": "e7c83390c801a80d",
        "g": "f0dc09849048ecc9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "",
        "payloadType": "date",
        "x": 130,
        "y": 280,
        "wires": [
            [
                "611ccf94ab64161f",
                "7566bd08b9e5dd36",
                "64cabd24ce831c11",
                "9ab74c06076ff7af",
                "20216e30d555c1c3",
                "bc99d8736192c469",
                "b427359c5603a0d9"
            ]
        ]
    },
    {
        "id": "eab76b22e21e5e07",
        "type": "comment",
        "z": "e7c83390c801a80d",
        "g": "f0dc09849048ecc9",
        "name": "Get filenames",
        "info": "",
        "x": 110,
        "y": 80,
        "wires": []
    },
    {
        "id": "bd24a9a6886cabfe",
        "type": "discordMessageManager",
        "z": "e7c83390c801a80d",
        "name": "Send Discord Message",
        "channel": "",
        "token": "934fbc5791d441db",
        "x": 2290,
        "y": 1920,
        "wires": [
            []
        ]
    },
    {
        "id": "d10b4e684138237a",
        "type": "file in",
        "z": "e7c83390c801a80d",
        "g": "f13b70955d462e75",
        "name": "",
        "filename": "LatestKill.log",
        "format": "lines",
        "chunk": false,
        "sendError": false,
        "encoding": "utf-16le",
        "allProps": true,
        "x": 890,
        "y": 1180,
        "wires": [
            [
                "0489064d8c34c5e1"
            ]
        ]
    },
    {
        "id": "0489064d8c34c5e1",
        "type": "join",
        "z": "e7c83390c801a80d",
        "g": "f13b70955d462e75",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "1.5",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1110,
        "y": 1180,
        "wires": [
            [
                "20cd440a60d08f68"
            ]
        ]
    },
    {
        "id": "20cd440a60d08f68",
        "type": "change",
        "z": "e7c83390c801a80d",
        "g": "f13b70955d462e75",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "newkilllogs",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "left",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "right",
                "pt": "msg",
                "to": "oldkilllogs",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1280,
        "y": 1180,
        "wires": [
            [
                "8caf47440d156ec5"
            ]
        ]
    },
    {
        "id": "ca97f64c80e03149",
        "type": "change",
        "z": "e7c83390c801a80d",
        "g": "f13b70955d462e75",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "oldkilllogs",
                "pt": "flow",
                "to": "newkilllogs",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 1320,
        "wires": [
            []
        ]
    },
    {
        "id": "8caf47440d156ec5",
        "type": "differences",
        "z": "e7c83390c801a80d",
        "g": "f13b70955d462e75",
        "name": "",
        "leftInput": "left",
        "leftInputType": "msg",
        "rightInput": "right",
        "rightInputType": "msg",
        "func": "-",
        "outputType": "msg",
        "output": "payload",
        "x": 1490,
        "y": 1180,
        "wires": [
            [
                "a53dab32327b99ac"
            ]
        ]
    },
    {
        "id": "5a19164330c992dd",
        "type": "comment",
        "z": "e7c83390c801a80d",
        "g": "f13b70955d462e75",
        "name": "Get latest kill log file.",
        "info": "",
        "x": 430,
        "y": 1120,
        "wires": []
    },
    {
        "id": "546092f6ad7e17ab",
        "type": "split",
        "z": "e7c83390c801a80d",
        "g": "f13b70955d462e75",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 530,
        "y": 1260,
        "wires": [
            [
                "ca97f64c80e03149",
                "bf6272bf00ea2bf0"
            ]
        ]
    },
    {
        "id": "a53dab32327b99ac",
        "type": "switch",
        "z": "e7c83390c801a80d",
        "g": "f13b70955d462e75",
        "name": "",
        "property": "payload.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lte",
                "v": "100",
                "vt": "str"
            },
            {
                "t": "gt",
                "v": "100",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 390,
        "y": 1260,
        "wires": [
            [
                "546092f6ad7e17ab"
            ],
            [
                "ca97f64c80e03149"
            ]
        ]
    },
    {
        "id": "ddfc03d28f1f9009",
        "type": "file in",
        "z": "e7c83390c801a80d",
        "g": "6eb98fdfabd2b89e",
        "name": "",
        "filename": "LatestMines.log",
        "format": "lines",
        "chunk": false,
        "sendError": false,
        "encoding": "utf-16le",
        "allProps": true,
        "x": 900,
        "y": 2220,
        "wires": [
            [
                "5bd1e88bf882bcc0"
            ]
        ]
    },
    {
        "id": "5bd1e88bf882bcc0",
        "type": "join",
        "z": "e7c83390c801a80d",
        "g": "6eb98fdfabd2b89e",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "1.5",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1110,
        "y": 2220,
        "wires": [
            [
                "01c77a7313acb0ea"
            ]
        ]
    },
    {
        "id": "01c77a7313acb0ea",
        "type": "change",
        "z": "e7c83390c801a80d",
        "g": "6eb98fdfabd2b89e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "newmineslogs",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "left",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "right",
                "pt": "msg",
                "to": "oldmineslogs",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1280,
        "y": 2220,
        "wires": [
            [
                "53fc821d9824b0a1"
            ]
        ]
    },
    {
        "id": "5120d294b5068e8e",
        "type": "change",
        "z": "e7c83390c801a80d",
        "g": "6eb98fdfabd2b89e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "oldmineslogs",
                "pt": "flow",
                "to": "newmineslogs",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1020,
        "y": 2360,
        "wires": [
            []
        ]
    },
    {
        "id": "53fc821d9824b0a1",
        "type": "differences",
        "z": "e7c83390c801a80d",
        "g": "6eb98fdfabd2b89e",
        "name": "",
        "leftInput": "left",
        "leftInputType": "msg",
        "rightInput": "right",
        "rightInputType": "msg",
        "func": "-",
        "outputType": "msg",
        "output": "payload",
        "x": 1490,
        "y": 2220,
        "wires": [
            [
                "a36e2c120de55427"
            ]
        ]
    },
    {
        "id": "c57d547bed19c3f2",
        "type": "comment",
        "z": "e7c83390c801a80d",
        "g": "6eb98fdfabd2b89e",
        "name": "Get latest mines log file.",
        "info": "",
        "x": 440,
        "y": 2160,
        "wires": []
    },
    {
        "id": "09499327219e7895",
        "type": "split",
        "z": "e7c83390c801a80d",
        "g": "6eb98fdfabd2b89e",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 530,
        "y": 2300,
        "wires": [
            [
                "5120d294b5068e8e",
                "e5a769887b87fd39"
            ]
        ]
    },
    {
        "id": "a36e2c120de55427",
        "type": "switch",
        "z": "e7c83390c801a80d",
        "g": "6eb98fdfabd2b89e",
        "name": "",
        "property": "payload.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lte",
                "v": "100",
                "vt": "str"
            },
            {
                "t": "gt",
                "v": "100",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 390,
        "y": 2300,
        "wires": [
            [
                "09499327219e7895"
            ],
            [
                "5120d294b5068e8e"
            ]
        ]
    },
    {
        "id": "ef5898da0ef9c5c2",
        "type": "file in",
        "z": "e7c83390c801a80d",
        "g": "12435dd0704ed692",
        "name": "",
        "filename": "LatestViolations.log",
        "format": "lines",
        "chunk": false,
        "sendError": false,
        "encoding": "utf-16le",
        "allProps": true,
        "x": 930,
        "y": 2540,
        "wires": [
            [
                "8f842eea6e492bf6"
            ]
        ]
    },
    {
        "id": "8f842eea6e492bf6",
        "type": "join",
        "z": "e7c83390c801a80d",
        "g": "12435dd0704ed692",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "1.5",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1170,
        "y": 2540,
        "wires": [
            [
                "30b0f4f49b6f63c7"
            ]
        ]
    },
    {
        "id": "30b0f4f49b6f63c7",
        "type": "change",
        "z": "e7c83390c801a80d",
        "g": "12435dd0704ed692",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "newviolationslogs",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "left",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "right",
                "pt": "msg",
                "to": "oldviolationslogs",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 2540,
        "wires": [
            [
                "2b1223d5c9b61ea4"
            ]
        ]
    },
    {
        "id": "03114adbe6c1b33e",
        "type": "change",
        "z": "e7c83390c801a80d",
        "g": "12435dd0704ed692",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "oldviolationslogs",
                "pt": "flow",
                "to": "newviolationslogs",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1030,
        "y": 2660,
        "wires": [
            []
        ]
    },
    {
        "id": "2b1223d5c9b61ea4",
        "type": "differences",
        "z": "e7c83390c801a80d",
        "g": "12435dd0704ed692",
        "name": "",
        "leftInput": "left",
        "leftInputType": "msg",
        "rightInput": "right",
        "rightInputType": "msg",
        "func": "-",
        "outputType": "msg",
        "output": "payload",
        "x": 1510,
        "y": 2540,
        "wires": [
            [
                "1ad79fc4ebe64019"
            ]
        ]
    },
    {
        "id": "a8611ffabe878ad7",
        "type": "comment",
        "z": "e7c83390c801a80d",
        "g": "12435dd0704ed692",
        "name": "Get latest violations log file.",
        "info": "",
        "x": 450,
        "y": 2480,
        "wires": []
    },
    {
        "id": "2ee1aea256edcd58",
        "type": "split",
        "z": "e7c83390c801a80d",
        "g": "12435dd0704ed692",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 530,
        "y": 2620,
        "wires": [
            [
                "03114adbe6c1b33e",
                "cd9178a79b592056"
            ]
        ]
    },
    {
        "id": "1ad79fc4ebe64019",
        "type": "switch",
        "z": "e7c83390c801a80d",
        "g": "12435dd0704ed692",
        "name": "",
        "property": "payload.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lte",
                "v": "100",
                "vt": "str"
            },
            {
                "t": "gt",
                "v": "100",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 390,
        "y": 2620,
        "wires": [
            [
                "2ee1aea256edcd58"
            ],
            [
                "03114adbe6c1b33e"
            ]
        ]
    },
    {
        "id": "75d727566cacab6f",
        "type": "change",
        "z": "e7c83390c801a80d",
        "g": "f0dc09849048ecc9",
        "name": "PingPerfect Context",
        "rules": [
            {
                "t": "set",
                "p": "workingDir",
                "pt": "flow",
                "to": "ppFolder",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "tail",
                "pt": "flow",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 600,
        "y": 160,
        "wires": [
            [
                "9263393f1b5c3a7c"
            ]
        ]
    },
    {
        "id": "9a8ae406ad5e20a8",
        "type": "change",
        "z": "e7c83390c801a80d",
        "g": "f0dc09849048ecc9",
        "name": "G-Portal Context",
        "rules": [
            {
                "t": "set",
                "p": "workingDir",
                "pt": "flow",
                "to": "SCUM/Saved/SaveFiles/Logs",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "tail",
                "pt": "flow",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 590,
        "y": 200,
        "wires": [
            [
                "9263393f1b5c3a7c"
            ]
        ]
    },
    {
        "id": "c9bdc4eeb83f3a71",
        "type": "ui_dropdown",
        "z": "e7c83390c801a80d",
        "g": "3af95fce94a57f18",
        "name": "Server Provider",
        "label": "Server Provider",
        "tooltip": "",
        "place": "Select option",
        "group": "6363ec22c866f790",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "PingPerfect",
                "value": "PingPerfect",
                "type": "str"
            },
            {
                "label": "G-Portal",
                "value": "G-Portal",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "topicType": "str",
        "x": 2200,
        "y": 100,
        "wires": [
            [
                "12258a32cdc88aef"
            ]
        ]
    },
    {
        "id": "ec49dc01b583d0e4",
        "type": "ui_text_input",
        "z": "e7c83390c801a80d",
        "g": "3af95fce94a57f18",
        "name": "",
        "label": "Host",
        "tooltip": "",
        "group": "6363ec22c866f790",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "topicType": "msg",
        "x": 2170,
        "y": 140,
        "wires": [
            [
                "8112e4f7214b8b1e"
            ]
        ]
    },
    {
        "id": "517bbb6d2e99fc3f",
        "type": "ui_text_input",
        "z": "e7c83390c801a80d",
        "g": "3af95fce94a57f18",
        "name": "",
        "label": "Port",
        "tooltip": "",
        "group": "6363ec22c866f790",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "topicType": "msg",
        "x": 2170,
        "y": 180,
        "wires": [
            [
                "03d4998c6b17607e"
            ]
        ]
    },
    {
        "id": "5cdbc691e12d63c8",
        "type": "ui_text_input",
        "z": "e7c83390c801a80d",
        "g": "3af95fce94a57f18",
        "name": "",
        "label": "Username",
        "tooltip": "",
        "group": "6363ec22c866f790",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "topicType": "msg",
        "x": 2190,
        "y": 220,
        "wires": [
            [
                "13fb9857d3485ceb"
            ]
        ]
    },
    {
        "id": "31c44dd228ad333a",
        "type": "ui_text_input",
        "z": "e7c83390c801a80d",
        "g": "3af95fce94a57f18",
        "name": "",
        "label": "Password",
        "tooltip": "",
        "group": "6363ec22c866f790",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "topicType": "msg",
        "x": 2180,
        "y": 260,
        "wires": [
            [
                "421399e29ada540b"
            ]
        ]
    },
    {
        "id": "bc3a43f9d6f9371c",
        "type": "ui_button",
        "z": "e7c83390c801a80d",
        "g": "3af95fce94a57f18",
        "name": "Save FTP Details",
        "group": "6363ec22c866f790",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Save FTP Details",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 2010,
        "y": 360,
        "wires": [
            [
                "85880742b4c37395"
            ]
        ]
    },
    {
        "id": "7d298d037dcc0785",
        "type": "debug",
        "z": "e7c83390c801a80d",
        "g": "3af95fce94a57f18",
        "name": "To SNMP (view result in debug window)",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2440,
        "y": 440,
        "wires": []
    },
    {
        "id": "2c73a6beb9f43f46",
        "type": "ui_toast",
        "z": "e7c83390c801a80d",
        "g": "3af95fce94a57f18",
        "position": "top right",
        "displayTime": "4",
        "highlight": "green",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "topic": "",
        "name": "",
        "x": 2370,
        "y": 400,
        "wires": []
    },
    {
        "id": "12258a32cdc88aef",
        "type": "change",
        "z": "e7c83390c801a80d",
        "g": "3af95fce94a57f18",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "UITempServerProvider",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2490,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "8112e4f7214b8b1e",
        "type": "change",
        "z": "e7c83390c801a80d",
        "g": "3af95fce94a57f18",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "UITempHost",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2460,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "03d4998c6b17607e",
        "type": "change",
        "z": "e7c83390c801a80d",
        "g": "3af95fce94a57f18",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "UITempPort",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2460,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "13fb9857d3485ceb",
        "type": "change",
        "z": "e7c83390c801a80d",
        "g": "3af95fce94a57f18",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "UITempUsername",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2470,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "421399e29ada540b",
        "type": "change",
        "z": "e7c83390c801a80d",
        "g": "3af95fce94a57f18",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "UITempPassword",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2470,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "85880742b4c37395",
        "type": "function",
        "z": "e7c83390c801a80d",
        "g": "3af95fce94a57f18",
        "name": "Check user input and construct payload object",
        "func": "var serverProvider = flow.get(\"UITempServerProvider\");\nvar host = flow.get(\"UITempHost\");\nvar port = flow.get(\"UITempPort\");\nvar username = flow.get(\"UITempUsername\");\nvar password = flow.get(\"UITempPassword\");\nvar ppFolder = flow.get(\"UITempPPFolder\");\n\nif(!serverProvider){\n    node.error(\"Server Provider is empty\",msg)\n    return null; //halt flow\n}\nif(!host){\n    node.error(\"Host is empty\",msg)\n    return null; //halt flow\n}\nif(!port){\n    node.error(\"Port is empty\",msg)\n    return null; //halt flow\n}\nif(!username){\n    node.error(\"Username is empty\",msg)\n    return null; //halt flow\n}\nif(!password){\n    node.error(\"Password is empty\",msg)\n    return null; //halt flow\n}\nif(!ppFolder){\n    node.error(\"ppFolder is empty\",msg)\n    return null; //halt flow\n}\nmsg.payload = [\n    {\n        \"serverProvider\": serverProvider,\n        \"host\": host,\n        \"port\":   port,\n        \"username\":  username,\n        \"password\": password,\n        \"ppFolder\": ppFolder\n    }\n]\n//temporary debug - set payload with string version for demo notification\n\n//msg.payload = \"All fields OK. This is what varbinds contains...\\n\" +  JSON.stringify(msg.varbinds);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2320,
        "y": 360,
        "wires": [
            [
                "2c73a6beb9f43f46",
                "7d298d037dcc0785",
                "f4c50cb1a1fe8ad3"
            ]
        ]
    },
    {
        "id": "f4c50cb1a1fe8ad3",
        "type": "change",
        "z": "e7c83390c801a80d",
        "g": "3af95fce94a57f18",
        "name": "Set Context",
        "rules": [
            {
                "t": "set",
                "p": "serverProvider",
                "pt": "flow",
                "to": "payload[0].serverProvider",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "host",
                "pt": "flow",
                "to": "payload[0].host",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "port",
                "pt": "flow",
                "to": "payload[0].port",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "username",
                "pt": "flow",
                "to": "payload[0].username",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "password",
                "pt": "flow",
                "to": "payload[0].password",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "ppFolder",
                "pt": "flow",
                "to": "payload[0].ppFolder",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2350,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "3cc3e9ff918628ad",
        "type": "comment",
        "z": "e7c83390c801a80d",
        "g": "3af95fce94a57f18",
        "name": "Set FTP Details",
        "info": "",
        "x": 2020,
        "y": 60,
        "wires": []
    },
    {
        "id": "611ccf94ab64161f",
        "type": "switch",
        "z": "e7c83390c801a80d",
        "g": "f0dc09849048ecc9",
        "name": "Check Server Provider",
        "property": "serverProvider",
        "propertyType": "flow",
        "rules": [
            {
                "t": "eq",
                "v": "PingPerfect",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "G-Portal",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 360,
        "y": 180,
        "wires": [
            [
                "75d727566cacab6f"
            ],
            [
                "9a8ae406ad5e20a8"
            ],
            [
                "0818dc81a8a04017"
            ]
        ]
    },
    {
        "id": "7503c43e3cd8e8cd",
        "type": "ui_text_input",
        "z": "e7c83390c801a80d",
        "g": "f2e3944ec2e98a49",
        "name": "",
        "label": "Admin Logs",
        "tooltip": "Enter the channel ID for this channel",
        "group": "054e62be5c706d3c",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "topicType": "msg",
        "x": 2170,
        "y": 640,
        "wires": [
            [
                "2958e4b1787ca703"
            ]
        ]
    },
    {
        "id": "6d034e37778169b5",
        "type": "ui_text_input",
        "z": "e7c83390c801a80d",
        "g": "f2e3944ec2e98a49",
        "name": "",
        "label": "Chat Logs",
        "tooltip": "Enter the channel ID for this channel",
        "group": "054e62be5c706d3c",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "topicType": "msg",
        "x": 2170,
        "y": 680,
        "wires": [
            [
                "f2c452def360f9c9"
            ]
        ]
    },
    {
        "id": "3a043ad22e6494c3",
        "type": "ui_text_input",
        "z": "e7c83390c801a80d",
        "g": "f2e3944ec2e98a49",
        "name": "",
        "label": "Global Chat Logs",
        "tooltip": "Enter the channel ID for this channel",
        "group": "054e62be5c706d3c",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "topicType": "msg",
        "x": 2190,
        "y": 720,
        "wires": [
            [
                "9a65bdf0fc49e6ba"
            ]
        ]
    },
    {
        "id": "d088580c23909a11",
        "type": "ui_text_input",
        "z": "e7c83390c801a80d",
        "g": "f2e3944ec2e98a49",
        "name": "",
        "label": "Kill Logs",
        "tooltip": "Enter the channel ID for this channel",
        "group": "054e62be5c706d3c",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "topicType": "msg",
        "x": 2160,
        "y": 760,
        "wires": [
            [
                "d5b3518a951b75de"
            ]
        ]
    },
    {
        "id": "b1baf05ee55dcecd",
        "type": "ui_text_input",
        "z": "e7c83390c801a80d",
        "g": "f2e3944ec2e98a49",
        "name": "",
        "label": "Login Logs",
        "tooltip": "Enter the channel ID for this channel",
        "group": "054e62be5c706d3c",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "topicType": "msg",
        "x": 2170,
        "y": 800,
        "wires": [
            [
                "cef88909939db6b4"
            ]
        ]
    },
    {
        "id": "8c3a31adf4cfee8a",
        "type": "ui_text_input",
        "z": "e7c83390c801a80d",
        "g": "f2e3944ec2e98a49",
        "name": "",
        "label": "Mines Logs",
        "tooltip": "Enter the channel ID for this channel",
        "group": "054e62be5c706d3c",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "topicType": "msg",
        "x": 2170,
        "y": 840,
        "wires": [
            [
                "fc12703b35502c02"
            ]
        ]
    },
    {
        "id": "cb64b9f593018214",
        "type": "ui_text_input",
        "z": "e7c83390c801a80d",
        "g": "f2e3944ec2e98a49",
        "name": "",
        "label": "Violations Logs",
        "tooltip": "Enter the channel ID for this channel",
        "group": "054e62be5c706d3c",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "topicType": "msg",
        "x": 2180,
        "y": 880,
        "wires": [
            [
                "746c74e2d4f82cd2"
            ]
        ]
    },
    {
        "id": "a1a35aa4a95f4777",
        "type": "ui_text_input",
        "z": "e7c83390c801a80d",
        "g": "f2e3944ec2e98a49",
        "name": "",
        "label": "PvP Logs",
        "tooltip": "Enter the channel ID for this channel",
        "group": "054e62be5c706d3c",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "topicType": "msg",
        "x": 2160,
        "y": 920,
        "wires": [
            [
                "8bbd4682b1a627ac"
            ]
        ]
    },
    {
        "id": "66910f23dd134c7a",
        "type": "ui_button",
        "z": "e7c83390c801a80d",
        "g": "f2e3944ec2e98a49",
        "name": "Save Channel IDs",
        "group": "054e62be5c706d3c",
        "order": 9,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Save Channel IDs",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 2030,
        "y": 960,
        "wires": [
            [
                "4543ef2791ad9a5a"
            ]
        ]
    },
    {
        "id": "2958e4b1787ca703",
        "type": "change",
        "z": "e7c83390c801a80d",
        "g": "f2e3944ec2e98a49",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "UITempChannelIDAdmin",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2480,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "f2c452def360f9c9",
        "type": "change",
        "z": "e7c83390c801a80d",
        "g": "f2e3944ec2e98a49",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "UITempChannelIDChat",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2470,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "9a65bdf0fc49e6ba",
        "type": "change",
        "z": "e7c83390c801a80d",
        "g": "f2e3944ec2e98a49",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "UITempChannelIDGlobalChat",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2490,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "d5b3518a951b75de",
        "type": "change",
        "z": "e7c83390c801a80d",
        "g": "f2e3944ec2e98a49",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "UITempChannelIDKill",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2470,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "cef88909939db6b4",
        "type": "change",
        "z": "e7c83390c801a80d",
        "g": "f2e3944ec2e98a49",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "UITempChannelIDLogin",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2470,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "fc12703b35502c02",
        "type": "change",
        "z": "e7c83390c801a80d",
        "g": "f2e3944ec2e98a49",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "UITempChannelIDMines",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2470,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "746c74e2d4f82cd2",
        "type": "change",
        "z": "e7c83390c801a80d",
        "g": "f2e3944ec2e98a49",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "UITempChannelIDViolations",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2490,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "8bbd4682b1a627ac",
        "type": "change",
        "z": "e7c83390c801a80d",
        "g": "f2e3944ec2e98a49",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "UITempChannelIDPvP",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2470,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "4543ef2791ad9a5a",
        "type": "function",
        "z": "e7c83390c801a80d",
        "g": "f2e3944ec2e98a49",
        "name": "Check user input and construct payload object",
        "func": "var channelIDAdmin = flow.get(\"UITempChannelIDAdmin\");\nvar channelIDChat = flow.get(\"UITempChannelIDChat\");\nvar channelIDGlobalChat = flow.get(\"UITempChannelIDGlobalChat\");\nvar channelIDKill = flow.get(\"UITempChannelIDKill\");\nvar channelIDLogin = flow.get(\"UITempChannelIDLogin\");\nvar channelIDMines = flow.get(\"UITempChannelIDMines\");\nvar channelIDViolations = flow.get(\"UITempChannelIDViolations\");\nvar channelIDPvP = flow.get(\"UITempChannelIDPvP\");\n\nif(!channelIDAdmin){\n    node.error(\"Admin Channel ID is empty\",msg)\n    return null; //halt flow\n}\nif(!channelIDChat){\n    node.error(\"Chat Channel ID is empty\",msg)\n    return null; //halt flow\n}\nif(!channelIDGlobalChat){\n    node.error(\"Global Chat Channel ID is empty\",msg)\n    return null; //halt flow\n}\nif(!channelIDKill){\n    node.error(\"Kill Channel ID is empty\",msg)\n    return null; //halt flow\n}\nif(!channelIDLogin){\n    node.error(\"Login Channel ID is empty\",msg)\n    return null; //halt flow\n}\nif(!channelIDMines){\n    node.error(\"Mines Channel ID is empty\",msg)\n    return null; //halt flow\n}\nif(!channelIDViolations){\n    node.error(\"Violations Channel ID is empty\",msg)\n    return null; //halt flow\n}\nif(!channelIDPvP){\n    node.error(\"PvP Channel ID is empty\",msg)\n    return null; //halt flow\n}\n\nmsg.payload = [\n    {\n        \"channelIDAdmin\": channelIDAdmin,\n        \"channelIDChat\": channelIDChat,\n        \"channelIDGlobalChat\":   channelIDGlobalChat,\n        \"channelIDKill\":  channelIDKill,\n        \"channelIDLogin\":  channelIDLogin,\n        \"channelIDMines\":  channelIDMines,\n        \"channelIDViolations\":  channelIDViolations,\n        \"channelIDPvP\": channelIDPvP\n    }\n]\n//temporary debug - set payload with string version for demo notification\n\n//msg.payload = \"All fields OK. This is what varbinds contains...\\n\" +  JSON.stringify(msg.varbinds);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2360,
        "y": 960,
        "wires": [
            [
                "fbc67ae51119acec",
                "c143eda6c0664c67",
                "a72d7d9a4491ca5c"
            ]
        ]
    },
    {
        "id": "fbc67ae51119acec",
        "type": "ui_toast",
        "z": "e7c83390c801a80d",
        "g": "f2e3944ec2e98a49",
        "position": "top right",
        "displayTime": "4",
        "highlight": "green",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "topic": "",
        "name": "",
        "x": 2390,
        "y": 1040,
        "wires": []
    },
    {
        "id": "c143eda6c0664c67",
        "type": "debug",
        "z": "e7c83390c801a80d",
        "g": "f2e3944ec2e98a49",
        "name": "To SNMP (view result in debug window)",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2460,
        "y": 1080,
        "wires": []
    },
    {
        "id": "a72d7d9a4491ca5c",
        "type": "change",
        "z": "e7c83390c801a80d",
        "g": "f2e3944ec2e98a49",
        "name": "Set Context",
        "rules": [
            {
                "t": "set",
                "p": "channelIDAdmin",
                "pt": "flow",
                "to": "payload[0].channelIDAdmin",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "channelIDChat",
                "pt": "flow",
                "to": "payload[0].channelIDChat",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "channelIDGlobalChat",
                "pt": "flow",
                "to": "payload[0].channelIDGlobalChat",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "channelIDKill",
                "pt": "flow",
                "to": "payload[0].channelIDKill",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "channelIDLogin",
                "pt": "flow",
                "to": "payload[0].channelIDLogin",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "channelIDMines",
                "pt": "flow",
                "to": "payload[0].channelIDMines",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "channelIDViolations",
                "pt": "flow",
                "to": "payload[0].channelIDViolations",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "channelIDPvP",
                "pt": "flow",
                "to": "payload[0].channelIDPvP",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2330,
        "y": 1120,
        "wires": [
            []
        ]
    },
    {
        "id": "f950f2df5481240c",
        "type": "comment",
        "z": "e7c83390c801a80d",
        "g": "f2e3944ec2e98a49",
        "name": "Set Channel IDs",
        "info": "",
        "x": 2020,
        "y": 580,
        "wires": []
    },
    {
        "id": "19a5e025f613ecfc",
        "type": "function",
        "z": "e7c83390c801a80d",
        "g": "f13b70955d462e75",
        "name": "Format message - PvP",
        "func": "msg.payload = \"```yaml\\nKiller: [\" +  msg.payload.details.Killer.ProfileName + \"] Victim: [\" + msg.payload.details.Victim.ProfileName + \"] Weapon: [\" + msg.payload.details.Weapon + \"]\\n```\";\nmsg.channel = flow.get(\"channelIDPvP\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1520,
        "y": 1300,
        "wires": [
            [
                "279676a4af56caf6"
            ]
        ]
    },
    {
        "id": "e5a769887b87fd39",
        "type": "function",
        "z": "e7c83390c801a80d",
        "g": "6eb98fdfabd2b89e",
        "name": "Format message - mines",
        "func": "var a = msg.payload;\nconst newMsg = {};\n\nnewMsg.time = a.substr(0, 19);\nnewMsg.ID = a.substring( a.indexOf(\"'\") + 1, a.indexOf(\":\",21));\nnewMsg.name = a.substring(a.indexOf(\":\",21)+1, a.indexOf(\"(\",21));\nnewMsg.mineAction = a.substring(a.indexOf(\")' \")+3, a.indexOf(\" on location(\"));\nnewMsg.locat = a.substring(a.indexOf(\" on location(\")+13, a.lastIndexOf(\")\"));\n\nnewMsg.payload = \"```yaml\\nTime: [\" + newMsg.time + \"] ID: [\" + newMsg.ID + \"] Name: [\" + newMsg.name + \"] Action: [\" + newMsg.mineAction + \"] Location: [\" + newMsg.locat +\"]\\n```\";\n\nnewMsg.channel = flow.get(\"channelIDMines\");\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1490,
        "y": 2300,
        "wires": [
            [
                "279676a4af56caf6"
            ]
        ]
    },
    {
        "id": "cd9178a79b592056",
        "type": "function",
        "z": "e7c83390c801a80d",
        "g": "12435dd0704ed692",
        "name": "Format message - violations",
        "func": "msg.channel = flow.get(\"channelIDViolations\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1480,
        "y": 2620,
        "wires": [
            [
                "279676a4af56caf6"
            ]
        ]
    },
    {
        "id": "bf6272bf00ea2bf0",
        "type": "switch",
        "z": "e7c83390c801a80d",
        "g": "f13b70955d462e75",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": " {\"Killer\":{\"ServerLocation",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 670,
        "y": 1260,
        "wires": [
            [
                "8e390dd4c4b0c4c3"
            ]
        ]
    },
    {
        "id": "8e390dd4c4b0c4c3",
        "type": "function",
        "z": "e7c83390c801a80d",
        "g": "f13b70955d462e75",
        "name": "Convert Kill Message to Object",
        "func": "let str = msg.payload;\nlet n = 21;\nconst kill = {};\n\nkill.time = {};\n\nkill.time.year = str.substr(0, 4);\nkill.time.month = str.substr(5, 2);\nkill.time.day = str.substr(8, 2);\nkill.time.hour = str.substr(11, 2);\nkill.time.minute = str.substr(14, 2);\nkill.time.second = str.substr(17, 2);\nkill.details = JSON.parse(str.substring(n));\n\nmsg.payload = kill;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 1260,
        "wires": [
            [
                "bc96117ebb3a0833",
                "19a5e025f613ecfc"
            ]
        ]
    },
    {
        "id": "bc96117ebb3a0833",
        "type": "function",
        "z": "e7c83390c801a80d",
        "g": "f13b70955d462e75",
        "name": "Format message - kill",
        "func": "msg.payload = \"```yaml\\nTime: [\" +  msg.payload.time.year + \".\" + msg.payload.time.month + \".\" + msg.payload.time.day + \"-\" + msg.payload.time.hour + \".\" + msg.payload.time.minute  + \".\" + msg.payload.time.second + \"] Killer: [\" +  msg.payload.details.Killer.ProfileName + \"] Victim: [\" + msg.payload.details.Victim.ProfileName + \"] Weapon: [\" + msg.payload.details.Weapon + \"] Event: [\" + msg.payload.details.Killer.IsInGameEvent + \"]\\n```\"; \nmsg.channel = flow.get(\"channelIDKill\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1520,
        "y": 1260,
        "wires": [
            [
                "279676a4af56caf6"
            ]
        ]
    },
    {
        "id": "0818dc81a8a04017",
        "type": "change",
        "z": "e7c83390c801a80d",
        "g": "f0dc09849048ecc9",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Server Provider not set. Navigate to UI to setup bot.",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 240,
        "wires": [
            [
                "e336f1bc7a2630db"
            ]
        ]
    },
    {
        "id": "c4de4c55a7d8a5ec",
        "type": "discordMessage",
        "z": "e7c83390c801a80d",
        "g": "935e59a53e14ca1a",
        "name": "Receive commands",
        "token": "934fbc5791d441db",
        "x": 2670,
        "y": 1680,
        "wires": [
            [
                "894a0b3429653a6e"
            ]
        ]
    },
    {
        "id": "894a0b3429653a6e",
        "type": "switch",
        "z": "e7c83390c801a80d",
        "g": "935e59a53e14ca1a",
        "name": "Delimiter !",
        "property": "payload[0]",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "$",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 2880,
        "y": 1680,
        "wires": [
            [
                "74e39d3374c18a3b"
            ]
        ]
    },
    {
        "id": "6aeca8586a5c8981",
        "type": "switch",
        "z": "e7c83390c801a80d",
        "g": "935e59a53e14ca1a",
        "name": "Switch Commands",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "$sendMessage",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "$buy",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "$register",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 3210,
        "y": 1680,
        "wires": [
            [
                "cf0605e75fcda16a",
                "1042a32bc4cf0ffd"
            ],
            [
                "963fa2554cc12567"
            ],
            [
                "d559745eea4ff202"
            ]
        ]
    },
    {
        "id": "cf0605e75fcda16a",
        "type": "debug",
        "z": "e7c83390c801a80d",
        "g": "935e59a53e14ca1a",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3270,
        "y": 1600,
        "wires": []
    },
    {
        "id": "74e39d3374c18a3b",
        "type": "switch",
        "z": "e7c83390c801a80d",
        "g": "935e59a53e14ca1a",
        "name": "",
        "property": "channel.id",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "885221470534533120",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 3030,
        "y": 1680,
        "wires": [
            [
                "6aeca8586a5c8981"
            ]
        ]
    },
    {
        "id": "846b45e89f07638e",
        "type": "http request",
        "z": "e7c83390c801a80d",
        "g": "42e0ca0b34b1ace9",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.battlemetrics.com/servers/{{{server}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "bearer",
        "x": 3170,
        "y": 120,
        "wires": [
            [
                "97f850dee3c80351"
            ]
        ]
    },
    {
        "id": "62e6a7686260e20c",
        "type": "inject",
        "z": "e7c83390c801a80d",
        "g": "42e0ca0b34b1ace9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "10",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 2810,
        "y": 120,
        "wires": [
            [
                "4a1cde2f6c3c5dd3"
            ]
        ]
    },
    {
        "id": "97f850dee3c80351",
        "type": "json",
        "z": "e7c83390c801a80d",
        "g": "42e0ca0b34b1ace9",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 3330,
        "y": 120,
        "wires": [
            [
                "1a9606d279ae8bfa"
            ]
        ]
    },
    {
        "id": "ceef083bbb5a5882",
        "type": "discordMessageManager",
        "z": "e7c83390c801a80d",
        "g": "42e0ca0b34b1ace9",
        "name": "",
        "channel": "",
        "token": "934fbc5791d441db",
        "x": 3690,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "1a9606d279ae8bfa",
        "type": "function",
        "z": "e7c83390c801a80d",
        "g": "42e0ca0b34b1ace9",
        "name": "",
        "func": "const newMsg = {}\nnewMsg.payload = {\n    color: 0x0099ff,\n    title: msg.payload.data.attributes.name,\n    url: 'https://www.battlemetrics.com/servers/scum/'+msg.server,\n    author: {\n        name: 'Battlemetrics',\n        icon_url: 'https://scontent-cpt1-1.xx.fbcdn.net/v/t1.18169-9/13254401_251055025255091_4858501098864636929_n.png?_nc_cat=100&ccb=1-5&_nc_sid=09cbfe&_nc_eui2=AeEZZPDxRkTukonmVATKsaMImKV7BI_hvEeYpXsEj-G8R5Y7bO3E2g-cLQwQlgc0Y4k&_nc_ohc=WHfJuoqXp6kAX8J6ryw&_nc_ht=scontent-cpt1-1.xx&oh=6422a34d48a7f8fdf90ef2458438e313&oe=614BE076',\n        url: 'https://www.battlemetrics.com/servers/scum/'+msg.server,\n    },\n    //description: 'Some description here',\n    thumbnail: {\n    url: flow.get(\"BatMetThumb\"),\n    },\n    fields: [\n        {\n            name: 'Players Online',\n            value: msg.payload.data.attributes.players + \"/\" + msg.payload.data.attributes.maxPlayers,\n            inline: true,\n        },\n        {\n            name: 'In-Game Time',\n            value: msg.payload.data.attributes.details.time,\n            inline: true,\n        },\n\t\t{\n\t\t\tname: '\\u200b',\n\t\t\tvalue: '\\u200b',\n\t\t\tinline: true,\n\t\t},\n        {\n            name: 'IP Address',\n            value: msg.payload.data.attributes.ip,\n            inline: true,\n        },\n        {\n            name: 'Port',\n            value: msg.payload.data.attributes.port,\n            inline: true,\n        },\n\t\t{\n\t\t\tname: '\\u200b',\n\t\t\tvalue: '\\u200b',\n\t\t\tinline: true,\n\t\t},\n        {\n            name: 'Server Rank',\n            value: msg.payload.data.attributes.rank,\n            inline: true,\n        },\n        {\n            name: 'Server ID',\n            value: msg.server,\n            inline: true,\n        },\n\t\t{\n\t\t\tname: '\\u200b',\n\t\t\tvalue: '\\u200b',\n\t\t\tinline: true,\n\t\t},\n        {\n            name: 'Game Version',\n            value: msg.payload.data.attributes.details.version,\n            inline: true,\n        },\n    ],\n    image: {\n        url: 'https://cdn.akamai.steamstatic.com/steam/apps/513710/header.jpg',\n    },\n    timestamp: new Date(),\n    footer: {\n        text: \"TEC1 System Bot written and developed by TheKraken_ZA#0001 |\",\n        icon_url: 'https://pbs.twimg.com/profile_images/1363429753970122752/7936_0LC_400x400.jpg',\n    },\n};\nnewMsg.embed = true;\nnewMsg.action = \"edit\";\nnewMsg.channel = msg.channel;\nnewMsg.message = msg.messageID;\nnewMsg.server = msg.server;\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3480,
        "y": 120,
        "wires": [
            [
                "ceef083bbb5a5882"
            ]
        ]
    },
    {
        "id": "b92e4d5a757aa9ee",
        "type": "comment",
        "z": "e7c83390c801a80d",
        "g": "42e0ca0b34b1ace9",
        "name": "Send Battlemetrics Embed",
        "info": "",
        "x": 2830,
        "y": 60,
        "wires": []
    },
    {
        "id": "4a1cde2f6c3c5dd3",
        "type": "change",
        "z": "e7c83390c801a80d",
        "g": "42e0ca0b34b1ace9",
        "name": "Server Params",
        "rules": [
            {
                "t": "set",
                "p": "server",
                "pt": "msg",
                "to": "BatMetServerID",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "channel",
                "pt": "msg",
                "to": "BatMetChannel",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "messageID",
                "pt": "msg",
                "to": "BatMetMsgID",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2980,
        "y": 120,
        "wires": [
            [
                "846b45e89f07638e"
            ]
        ]
    },
    {
        "id": "f8bcf518c4d6a0d3",
        "type": "catch",
        "z": "e7c83390c801a80d",
        "g": "42e0ca0b34b1ace9",
        "name": "",
        "scope": [
            "ceef083bbb5a5882"
        ],
        "uncaught": false,
        "x": 2770,
        "y": 340,
        "wires": [
            [
                "543d8e64cb8b780e"
            ]
        ]
    },
    {
        "id": "543d8e64cb8b780e",
        "type": "switch",
        "z": "e7c83390c801a80d",
        "g": "42e0ca0b34b1ace9",
        "name": "",
        "property": "error.message",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "DiscordAPIError: Unknown Message",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "msg.message wasn't set correctly",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 2930,
        "y": 340,
        "wires": [
            [
                "744cda17e1eef0f0"
            ],
            [
                "744cda17e1eef0f0"
            ],
            [
                "4f6c2a2ec6c139af"
            ]
        ]
    },
    {
        "id": "4f6c2a2ec6c139af",
        "type": "debug",
        "z": "e7c83390c801a80d",
        "g": "42e0ca0b34b1ace9",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2870,
        "y": 420,
        "wires": []
    },
    {
        "id": "83ab42e7ccbc87e0",
        "type": "function",
        "z": "e7c83390c801a80d",
        "g": "42e0ca0b34b1ace9",
        "name": "",
        "func": "const newMsg = {}\nnewMsg.payload = {\n    color: 0x0099ff,\n    title: msg.payload.data.attributes.name,\n    url: 'https://www.battlemetrics.com/servers/scum/'+msg.server,\n    author: {\n        name: 'Battlemetrics',\n        icon_url: 'https://scontent-cpt1-1.xx.fbcdn.net/v/t1.18169-9/13254401_251055025255091_4858501098864636929_n.png?_nc_cat=100&ccb=1-5&_nc_sid=09cbfe&_nc_eui2=AeEZZPDxRkTukonmVATKsaMImKV7BI_hvEeYpXsEj-G8R5Y7bO3E2g-cLQwQlgc0Y4k&_nc_ohc=WHfJuoqXp6kAX8J6ryw&_nc_ht=scontent-cpt1-1.xx&oh=6422a34d48a7f8fdf90ef2458438e313&oe=614BE076',\n        url: 'https://www.battlemetrics.com/servers/scum/'+msg.server,\n    },\n    //description: 'Some description here',\n    thumbnail: {\n        url: flow.get(\"BatMetThumb\"),\n    },\n    fields: [\n        {\n            name: 'Players Online',\n            value: msg.payload.data.attributes.players + \"/64\",\n            inline: true,\n        },\n        {\n            name: 'In-Game Time',\n            value: msg.payload.data.attributes.details.time,\n            inline: true,\n        },\n\t\t{\n\t\t\tname: '\\u200b',\n\t\t\tvalue: '\\u200b',\n\t\t\tinline: true,\n\t\t},\n        {\n            name: 'IP Address',\n            value: msg.payload.data.attributes.ip,\n            inline: true,\n        },\n        {\n            name: 'Port',\n            value: msg.payload.data.attributes.port,\n            inline: true,\n        },\n\t\t{\n\t\t\tname: '\\u200b',\n\t\t\tvalue: '\\u200b',\n\t\t\tinline: true,\n\t\t},\n        {\n            name: 'Server Rank',\n            value: msg.payload.data.attributes.rank,\n            inline: true,\n        },\n        {\n            name: 'Server ID',\n            value: msg.server,\n            inline: true,\n        },\n\t\t{\n\t\t\tname: '\\u200b',\n\t\t\tvalue: '\\u200b',\n\t\t\tinline: true,\n\t\t},\n        {\n            name: 'Game Version',\n            value: msg.payload.data.attributes.details.version,\n            inline: true,\n        },\n    ],\n    image: {\n        url: 'https://cdn.akamai.steamstatic.com/steam/apps/513710/header.jpg',\n    },\n    timestamp: new Date(),\n    footer: {\n        text: \"TEC1 System Bot written and developed by TheKraken_ZA#0001 |\",\n        icon_url: 'https://pbs.twimg.com/profile_images/1363429753970122752/7936_0LC_400x400.jpg',\n    },\n};\nnewMsg.embed = true;\nnewMsg.channel = msg.channel;\nnewMsg.server = msg.server;\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3400,
        "y": 340,
        "wires": [
            [
                "d24e807803192783"
            ]
        ]
    },
    {
        "id": "fb93372f3fa018f2",
        "type": "json",
        "z": "e7c83390c801a80d",
        "g": "42e0ca0b34b1ace9",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 3250,
        "y": 340,
        "wires": [
            [
                "83ab42e7ccbc87e0"
            ]
        ]
    },
    {
        "id": "744cda17e1eef0f0",
        "type": "http request",
        "z": "e7c83390c801a80d",
        "g": "42e0ca0b34b1ace9",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.battlemetrics.com/servers/{{{server}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "bearer",
        "x": 3090,
        "y": 340,
        "wires": [
            [
                "fb93372f3fa018f2"
            ]
        ]
    },
    {
        "id": "d24e807803192783",
        "type": "discordMessageManager",
        "z": "e7c83390c801a80d",
        "g": "42e0ca0b34b1ace9",
        "name": "",
        "channel": "",
        "token": "934fbc5791d441db",
        "x": 3610,
        "y": 340,
        "wires": [
            [
                "bb481680c7838228"
            ]
        ]
    },
    {
        "id": "bb481680c7838228",
        "type": "function",
        "z": "e7c83390c801a80d",
        "g": "42e0ca0b34b1ace9",
        "name": "",
        "func": "flow.set(\"BatMetMsgID\", msg.payload.id);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3500,
        "y": 440,
        "wires": [
            [
                "a3ae95950a9ec97c"
            ]
        ]
    },
    {
        "id": "a3ae95950a9ec97c",
        "type": "debug",
        "z": "e7c83390c801a80d",
        "g": "42e0ca0b34b1ace9",
        "name": "Message not found, created new message.",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "msgid",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3770,
        "y": 440,
        "wires": []
    },
    {
        "id": "a0afc63c51e60031",
        "type": "comment",
        "z": "e7c83390c801a80d",
        "g": "0a693ed80d2f4120",
        "name": "Setup Battlemetrics",
        "info": "",
        "x": 2990,
        "y": 580,
        "wires": []
    },
    {
        "id": "71b5dff00ed10042",
        "type": "ui_text_input",
        "z": "e7c83390c801a80d",
        "g": "0a693ed80d2f4120",
        "name": "",
        "label": "Server ID",
        "tooltip": "Enter the Battlemetrics Server ID for your server",
        "group": "cdebc38f99ac001e",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "topicType": "msg",
        "x": 2960,
        "y": 640,
        "wires": [
            [
                "ede91e35096fa18d"
            ]
        ]
    },
    {
        "id": "a16c87c58967aa49",
        "type": "ui_text_input",
        "z": "e7c83390c801a80d",
        "g": "0a693ed80d2f4120",
        "name": "",
        "label": "Channel ID",
        "tooltip": "Enter the channel ID of your Battlemetrics Channel",
        "group": "cdebc38f99ac001e",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "topicType": "msg",
        "x": 2970,
        "y": 680,
        "wires": [
            [
                "d8aec8dbbb245fd8"
            ]
        ]
    },
    {
        "id": "eb3658ede499a134",
        "type": "ui_button",
        "z": "e7c83390c801a80d",
        "g": "0a693ed80d2f4120",
        "name": "Save Channel IDs",
        "group": "cdebc38f99ac001e",
        "order": 9,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Save Settings",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 2990,
        "y": 760,
        "wires": [
            [
                "670ab20c8c4c7c26"
            ]
        ]
    },
    {
        "id": "ede91e35096fa18d",
        "type": "change",
        "z": "e7c83390c801a80d",
        "g": "0a693ed80d2f4120",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "UITempBMServerID",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3220,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "d8aec8dbbb245fd8",
        "type": "change",
        "z": "e7c83390c801a80d",
        "g": "0a693ed80d2f4120",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "UITempBMChannelID",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3230,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "670ab20c8c4c7c26",
        "type": "function",
        "z": "e7c83390c801a80d",
        "g": "0a693ed80d2f4120",
        "name": "Check user input and construct payload object",
        "func": "var BMServerID = flow.get(\"UITempBMServerID\");\nvar BMChannelID = flow.get(\"UITempBMChannelID\");\nvar BMThumb = flow.get(\"UITempBMThumb\");\n\nif(!BMServerID){\n    node.error(\"Battlemetrics Server ID is empty\",msg)\n    return null; //halt flow\n}\nif(!BMChannelID){\n    node.error(\"Battlemetrics Channel ID is empty\",msg)\n    return null; //halt flow\n}\nif(!BMThumb){\n    node.error(\"Thumbnail URL is empty\",msg)\n    return null; //halt flow\n}\n\nmsg.payload = [\n    {\n        \"BMServerID\": BMServerID,\n        \"BMChannelID\": BMChannelID,\n        \"BMThumb\": BMThumb\n    }\n]\n//temporary debug - set payload with string version for demo notification\n\n//msg.payload = \"All fields OK. This is what varbinds contains...\\n\" +  JSON.stringify(msg.varbinds);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3280,
        "y": 760,
        "wires": [
            [
                "5323bc0b2a2e2691",
                "9cb5f4eabd6c7153",
                "f1b7362c3fb12344"
            ]
        ]
    },
    {
        "id": "5323bc0b2a2e2691",
        "type": "ui_toast",
        "z": "e7c83390c801a80d",
        "g": "0a693ed80d2f4120",
        "position": "top right",
        "displayTime": "4",
        "highlight": "green",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "topic": "",
        "name": "",
        "x": 3190,
        "y": 800,
        "wires": []
    },
    {
        "id": "9cb5f4eabd6c7153",
        "type": "debug",
        "z": "e7c83390c801a80d",
        "g": "0a693ed80d2f4120",
        "name": "To SNMP (view result in debug window)",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3260,
        "y": 840,
        "wires": []
    },
    {
        "id": "f1b7362c3fb12344",
        "type": "change",
        "z": "e7c83390c801a80d",
        "g": "0a693ed80d2f4120",
        "name": "Set Context",
        "rules": [
            {
                "t": "set",
                "p": "BatMetServerID",
                "pt": "flow",
                "to": "payload[0].BMServerID",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "BatMetChannel",
                "pt": "flow",
                "to": "payload[0].BMChannelID",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "BatMetThumb",
                "pt": "flow",
                "to": "payload[0].BMThumb",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3170,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "71059a572e32d172",
        "type": "inject",
        "z": "e7c83390c801a80d",
        "g": "59f969dbefde3c20",
        "name": "CREATE DB SCHEMA",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 2710,
        "y": 1840,
        "wires": [
            [
                "b005d7a79f6cc721",
                "d5d5f15b966575aa",
                "f9cd1cf436052c68"
            ]
        ]
    },
    {
        "id": "b005d7a79f6cc721",
        "type": "function",
        "z": "e7c83390c801a80d",
        "g": "59f969dbefde3c20",
        "name": "CREATE Tables",
        "func": "msg.topic = \"CREATE TABLE IF NOT EXISTS steamUser (steamId INTEGER PRIMARY KEY, scumName TEXT, ipAddress TEXT, scumId NUMERIC, fame INTEGER, discordID INTEGER);\";\nreturn msg;\n\n//CREATE TABLE IF NOT EXISTS discordUser (discordID INTEGER PRIMARY KEY, registrationID TEXT, registered BOOL);",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2920,
        "y": 1840,
        "wires": [
            [
                "ae718095be210f28"
            ]
        ]
    },
    {
        "id": "ae718095be210f28",
        "type": "sqlite",
        "z": "e7c83390c801a80d",
        "g": "59f969dbefde3c20",
        "mydb": "2118590cbe579670",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 3160,
        "y": 1840,
        "wires": [
            [
                "ace7eb5425392eb6"
            ]
        ]
    },
    {
        "id": "917f0638ce49c2db",
        "type": "comment",
        "z": "e7c83390c801a80d",
        "g": "59f969dbefde3c20",
        "name": "Create DB Schema",
        "info": "",
        "x": 2690,
        "y": 1780,
        "wires": []
    },
    {
        "id": "e20fadcb84b3af7e",
        "type": "comment",
        "z": "e7c83390c801a80d",
        "g": "935e59a53e14ca1a",
        "name": "Handle $ commands",
        "info": "",
        "x": 2670,
        "y": 1620,
        "wires": []
    },
    {
        "id": "ace7eb5425392eb6",
        "type": "debug",
        "z": "e7c83390c801a80d",
        "g": "59f969dbefde3c20",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3360,
        "y": 1780,
        "wires": []
    },
    {
        "id": "2bc086dd1d0e8d27",
        "type": "tcp out",
        "z": "cf6783623c678570",
        "host": "${TCP_IP}",
        "port": "${TCP_PORT}",
        "beserver": "client",
        "base64": false,
        "end": false,
        "name": "",
        "x": 1470,
        "y": 360,
        "wires": []
    },
    {
        "id": "42b4bd72e9117726",
        "type": "link in",
        "z": "cf6783623c678570",
        "g": "c58defa34619bed1",
        "name": "",
        "links": [
            "0249fbf976c5684c"
        ],
        "x": 155,
        "y": 140,
        "wires": [
            [
                "a3ef228f3ea0197d"
            ]
        ]
    },
    {
        "id": "a3ef228f3ea0197d",
        "type": "switch",
        "z": "cf6783623c678570",
        "g": "c58defa34619bed1",
        "name": "",
        "property": "ID",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "BotSteamID",
                "vt": "global"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 250,
        "y": 140,
        "wires": [
            [
                "87ac5c256773c365",
                "f571a701c8eade82"
            ]
        ]
    },
    {
        "id": "b2ef73b93b171a38",
        "type": "ui_text_input",
        "z": "e7c83390c801a80d",
        "g": "d3b5dcf1216195f0",
        "name": "Bot Steam ID",
        "label": "Bot Steam ID",
        "tooltip": "",
        "group": "5fe617e0c367d2ea",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "topicType": "msg",
        "x": 2170,
        "y": 1260,
        "wires": [
            [
                "700b0a18f669792e"
            ]
        ]
    },
    {
        "id": "a040e13d90ebba7e",
        "type": "ui_button",
        "z": "e7c83390c801a80d",
        "g": "d3b5dcf1216195f0",
        "name": "Save Bot Steam ID",
        "group": "5fe617e0c367d2ea",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Save Bot Steam ID",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 2190,
        "y": 1300,
        "wires": [
            [
                "33c05c3ed8549326"
            ]
        ]
    },
    {
        "id": "43bd6aaf8c6a93a7",
        "type": "comment",
        "z": "e7c83390c801a80d",
        "g": "d3b5dcf1216195f0",
        "name": "Set Bot Steam ID",
        "info": "",
        "x": 2180,
        "y": 1220,
        "wires": []
    },
    {
        "id": "700b0a18f669792e",
        "type": "change",
        "z": "e7c83390c801a80d",
        "g": "d3b5dcf1216195f0",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "UITempBotSteamID",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2460,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "33c05c3ed8549326",
        "type": "function",
        "z": "e7c83390c801a80d",
        "g": "d3b5dcf1216195f0",
        "name": "Check user input and construct payload object",
        "func": "var BotSteamID = flow.get(\"UITempBotSteamID\");\n\nif(!BotSteamID){\n    node.error(\"Bot Steam ID is empty\",msg)\n    return null; //halt flow\n}\n\nmsg.payload = [\n    {\n        \"BotSteamID\": BotSteamID,\n    }\n]\n//temporary debug - set payload with string version for demo notification\n\n//msg.payload = \"All fields OK. This is what varbinds contains...\\n\" +  JSON.stringify(msg.varbinds);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2520,
        "y": 1300,
        "wires": [
            [
                "e7bddbf4147893d6",
                "265d3eb51e402107",
                "f984d2b7c6e0d1b2"
            ]
        ]
    },
    {
        "id": "f984d2b7c6e0d1b2",
        "type": "change",
        "z": "e7c83390c801a80d",
        "g": "d3b5dcf1216195f0",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "BotSteamID",
                "pt": "global",
                "to": "payload[0].BotSteamID",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2440,
        "y": 1480,
        "wires": [
            []
        ]
    },
    {
        "id": "265d3eb51e402107",
        "type": "debug",
        "z": "e7c83390c801a80d",
        "g": "d3b5dcf1216195f0",
        "name": "To SNMP (view result in debug window)",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2500,
        "y": 1440,
        "wires": []
    },
    {
        "id": "e7bddbf4147893d6",
        "type": "ui_toast",
        "z": "e7c83390c801a80d",
        "g": "d3b5dcf1216195f0",
        "position": "top right",
        "displayTime": "4",
        "highlight": "green",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "topic": "",
        "name": "",
        "x": 2420,
        "y": 1400,
        "wires": []
    },
    {
        "id": "26ed40633166e090",
        "type": "file in",
        "z": "e7c83390c801a80d",
        "g": "b36a1ae7d14f8198",
        "name": "",
        "filename": "LatestChat.log",
        "format": "lines",
        "chunk": false,
        "sendError": false,
        "encoding": "utf-16le",
        "allProps": true,
        "x": 900,
        "y": 800,
        "wires": [
            [
                "7406a409407d4cc1"
            ]
        ]
    },
    {
        "id": "7406a409407d4cc1",
        "type": "join",
        "z": "e7c83390c801a80d",
        "g": "b36a1ae7d14f8198",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "1.5",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1110,
        "y": 800,
        "wires": [
            [
                "efb1e6b864de3a4d"
            ]
        ]
    },
    {
        "id": "efb1e6b864de3a4d",
        "type": "change",
        "z": "e7c83390c801a80d",
        "g": "b36a1ae7d14f8198",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "newchatlogs",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "left",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "right",
                "pt": "msg",
                "to": "oldchatlogs",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1260,
        "y": 800,
        "wires": [
            [
                "e248c92ab607f364"
            ]
        ]
    },
    {
        "id": "e248c92ab607f364",
        "type": "differences",
        "z": "e7c83390c801a80d",
        "g": "b36a1ae7d14f8198",
        "name": "",
        "leftInput": "left",
        "leftInputType": "msg",
        "rightInput": "right",
        "rightInputType": "msg",
        "func": "-",
        "outputType": "msg",
        "output": "payload",
        "x": 1470,
        "y": 800,
        "wires": [
            [
                "9cfeebda0480709f",
                "edec9c71bb1fce3f"
            ]
        ]
    },
    {
        "id": "cf5549fb5ce0239e",
        "type": "comment",
        "z": "e7c83390c801a80d",
        "g": "b36a1ae7d14f8198",
        "name": "Get latest chat log file.",
        "info": "",
        "x": 440,
        "y": 740,
        "wires": []
    },
    {
        "id": "8215dd1fc9665872",
        "type": "split",
        "z": "e7c83390c801a80d",
        "g": "b36a1ae7d14f8198",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 790,
        "y": 860,
        "wires": [
            [
                "47f3282c27881050",
                "7e42fa7e035a7f39"
            ]
        ]
    },
    {
        "id": "9cfeebda0480709f",
        "type": "switch",
        "z": "e7c83390c801a80d",
        "g": "b36a1ae7d14f8198",
        "name": "",
        "property": "payload.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lte",
                "v": "100",
                "vt": "str"
            },
            {
                "t": "gt",
                "v": "100",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 610,
        "y": 860,
        "wires": [
            [
                "8215dd1fc9665872"
            ],
            [
                "47f3282c27881050"
            ]
        ]
    },
    {
        "id": "7e42fa7e035a7f39",
        "type": "function",
        "z": "e7c83390c801a80d",
        "g": "b36a1ae7d14f8198",
        "name": "Format message - chat",
        "func": "var a = msg.payload;\nconst newMsg = {};\n\nnewMsg.time = a.substr(0, 19);\nnewMsg.ID = a.substr(22, 17);\nnewMsg.name = a.substr(a.indexOf(\":\",22)+1,(a.indexOf(\"(\",a.indexOf(\":\",22))-1)-a.indexOf(\":\",22));\nnewMsg.msgType = a.substring(a.indexOf(\")' '\")+4, a.indexOf(\":\",a.indexOf(\")' '\")+1));\nnewMsg.message = a.substring(a.indexOf(\"' '\" + newMsg.msgType + \": \"), a.lastIndexOf(\"'\"));\nnewMsg.message = newMsg.message.replace(\"' '\"+newMsg.msgType+\": \",\"\");\n\nif (newMsg.msgType == \"Global\") {\n  newMsg.payload = \"```md\\n# Time: [\" + newMsg.time + \"] ID: [\" + newMsg.ID + \"] Name: [\" + newMsg.name + \"] Type: [\" + newMsg.msgType + \"] Message: [\" + newMsg.message +\"]\\n```\";\n} else if (newMsg.msgType == \"Local\"){\n    newMsg.payload = \"```\\n# Time: [\" + newMsg.time + \"] ID: [\" + newMsg.ID + \"] Name: [\" + newMsg.name + \"] Type: [\" + newMsg.msgType + \"] Message: [\" + newMsg.message +\"]\\n```\";\n} else {\n    newMsg.payload = \"```diff\\n! Time: [\" + newMsg.time + \"] ID: [\" + newMsg.ID + \"] Name: [\" + newMsg.name + \"] Type: [\" + newMsg.msgType + \"] Message: [\" + newMsg.message +\"]\\n```\";\n}\n\nnewMsg.channel = flow.get(\"channelIDChat\");\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1410,
        "y": 920,
        "wires": [
            [
                "98a83dfabb0e00bb",
                "0249fbf976c5684c",
                "279676a4af56caf6"
            ]
        ]
    },
    {
        "id": "98a83dfabb0e00bb",
        "type": "switch",
        "z": "e7c83390c801a80d",
        "g": "b36a1ae7d14f8198",
        "name": "",
        "property": "msgType",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Global",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1210,
        "y": 1000,
        "wires": [
            [
                "437f2ced33b2c09e"
            ]
        ]
    },
    {
        "id": "437f2ced33b2c09e",
        "type": "change",
        "z": "e7c83390c801a80d",
        "g": "b36a1ae7d14f8198",
        "name": "Format messages - Global chat",
        "rules": [
            {
                "t": "set",
                "p": "channel",
                "pt": "msg",
                "to": "channelIDGlobalChat",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1410,
        "y": 1000,
        "wires": [
            [
                "279676a4af56caf6"
            ]
        ]
    },
    {
        "id": "47f3282c27881050",
        "type": "change",
        "z": "e7c83390c801a80d",
        "g": "b36a1ae7d14f8198",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "oldchatlogs",
                "pt": "flow",
                "to": "newchatlogs",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 970,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "0249fbf976c5684c",
        "type": "link out",
        "z": "e7c83390c801a80d",
        "g": "b36a1ae7d14f8198",
        "name": "",
        "links": [
            "42b4bd72e9117726",
            "4485eefb1a057ce5"
        ],
        "x": 1535,
        "y": 860,
        "wires": []
    },
    {
        "id": "87ac5c256773c365",
        "type": "debug",
        "z": "cf6783623c678570",
        "g": "c58defa34619bed1",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 270,
        "y": 200,
        "wires": []
    },
    {
        "id": "f571a701c8eade82",
        "type": "switch",
        "z": "cf6783623c678570",
        "g": "c58defa34619bed1",
        "name": "",
        "property": "message",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "SCUMmunity Bot Initializing...",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 390,
        "y": 140,
        "wires": [
            [
                "59708558768acf73",
                "3ef4329bf93ca1c4",
                "960ffb812b58175a"
            ]
        ]
    },
    {
        "id": "3ef4329bf93ca1c4",
        "type": "switch",
        "z": "cf6783623c678570",
        "g": "c58defa34619bed1",
        "name": "",
        "property": "msgType",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Local",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 550,
        "y": 100,
        "wires": [
            [
                "e115397606bcc015"
            ]
        ]
    },
    {
        "id": "59708558768acf73",
        "type": "switch",
        "z": "cf6783623c678570",
        "g": "c58defa34619bed1",
        "name": "",
        "property": "msgType",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Squad",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 550,
        "y": 140,
        "wires": [
            [
                "d6bad227728d6424"
            ]
        ]
    },
    {
        "id": "960ffb812b58175a",
        "type": "switch",
        "z": "cf6783623c678570",
        "g": "c58defa34619bed1",
        "name": "",
        "property": "msgType",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Global",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 550,
        "y": 180,
        "wires": [
            [
                "b16da2cc36bc87a7"
            ]
        ]
    },
    {
        "id": "e115397606bcc015",
        "type": "function",
        "z": "cf6783623c678570",
        "g": "c58defa34619bed1",
        "name": "",
        "func": "const newMsg = {}\n\nnewMsg.payload = '{ \"type\": \"typeString\", \"args\": \"SCUMmunity Bot Finished Initializing\" }';\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 100,
        "wires": [
            [
                "3e020dc420936440",
                "08986cca3b6b02c6"
            ]
        ]
    },
    {
        "id": "d6bad227728d6424",
        "type": "function",
        "z": "cf6783623c678570",
        "g": "c58defa34619bed1",
        "name": "",
        "func": "var msg1 = { payload:'{ \"type\": \"keyTap\", \"args\": \"tab\" }' };\nvar msg2 = { payload:'{ \"type\": \"typeString\", \"args\": \"SCUMmunity Bot Finished Initializing\" }' };\n\nreturn [ [ msg1, msg2 ] ];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 140,
        "wires": [
            [
                "3e020dc420936440",
                "08986cca3b6b02c6"
            ]
        ]
    },
    {
        "id": "b16da2cc36bc87a7",
        "type": "function",
        "z": "cf6783623c678570",
        "g": "c58defa34619bed1",
        "name": "",
        "func": "//Removed additional tab, as it appears there isn't a squad chat when in drone mode\nvar msg2 = { payload:'{ \"type\": \"keyTap\", \"args\": \"tab\" }' };\nvar msg3 = { payload:'{ \"type\": \"typeString\", \"args\": \"SCUMmunity Bot Finished Initializing\" }' };\n\nreturn [ [ msg2, msg3 ] ];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 180,
        "wires": [
            [
                "3e020dc420936440",
                "08986cca3b6b02c6"
            ]
        ]
    },
    {
        "id": "53538e4aa10c3508",
        "type": "comment",
        "z": "cf6783623c678570",
        "g": "c58defa34619bed1",
        "name": "Check Bot Chat Location",
        "info": "",
        "x": 310,
        "y": 60,
        "wires": []
    },
    {
        "id": "70a2c6a0a236e809",
        "type": "function",
        "z": "cf6783623c678570",
        "name": "typeString",
        "func": "const newMsg = {}\nnewMsg.deliveryStatus = msg.deliveryStatus;\nnewMsg.payload = '{ \"type\": \"typeString\", \"args\": \"' + msg.payload + '\" }';\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 280,
        "wires": [
            [
                "08986cca3b6b02c6"
            ]
        ]
    },
    {
        "id": "60ae93f7a2d7c381",
        "type": "link in",
        "z": "cf6783623c678570",
        "name": "Generic Message Sender",
        "links": [
            "ac0107e358a6549f",
            "aaa6cc45f419ba46"
        ],
        "x": 215,
        "y": 280,
        "wires": [
            [
                "70a2c6a0a236e809"
            ]
        ]
    },
    {
        "id": "1042a32bc4cf0ffd",
        "type": "function",
        "z": "e7c83390c801a80d",
        "g": "935e59a53e14ca1a",
        "name": "",
        "func": "let str = msg.payload;\n \nstr = str.substring(12);\nmsg.payload = str;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3460,
        "y": 1600,
        "wires": [
            [
                "ac0107e358a6549f"
            ]
        ]
    },
    {
        "id": "ac0107e358a6549f",
        "type": "link out",
        "z": "e7c83390c801a80d",
        "g": "935e59a53e14ca1a",
        "name": "",
        "links": [
            "60ae93f7a2d7c381"
        ],
        "x": 3555,
        "y": 1600,
        "wires": []
    },
    {
        "id": "873d8a2ace439507",
        "type": "change",
        "z": "e7c83390c801a80d",
        "g": "0a693ed80d2f4120",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "UITempBMThumb",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3210,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "e401ee9388a4e28d",
        "type": "ui_text_input",
        "z": "e7c83390c801a80d",
        "g": "0a693ed80d2f4120",
        "name": "",
        "label": "Thumbnail URL",
        "tooltip": "URL for your Discord's Logo",
        "group": "cdebc38f99ac001e",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "topicType": "msg",
        "x": 2980,
        "y": 720,
        "wires": [
            [
                "873d8a2ace439507"
            ]
        ]
    },
    {
        "id": "05c63d9679d05d8e",
        "type": "tcp in",
        "z": "cf6783623c678570",
        "name": "",
        "server": "server",
        "host": "",
        "port": "9001",
        "datamode": "single",
        "datatype": "utf8",
        "newline": "",
        "topic": "",
        "base64": false,
        "x": 120,
        "y": 440,
        "wires": [
            [
                "de425de218f9de2b",
                "e60f2910a67b9d24"
            ]
        ]
    },
    {
        "id": "08986cca3b6b02c6",
        "type": "q-gate",
        "z": "cf6783623c678570",
        "name": "",
        "controlTopic": "control",
        "defaultState": "queueing",
        "openCmd": "open",
        "closeCmd": "close",
        "toggleCmd": "toggle",
        "queueCmd": "queue",
        "defaultCmd": "default",
        "triggerCmd": "trigger",
        "flushCmd": "flush",
        "resetCmd": "reset",
        "peekCmd": "peek",
        "dropCmd": "drop",
        "statusCmd": "status",
        "maxQueueLength": "100",
        "keepNewest": false,
        "qToggle": false,
        "persist": false,
        "storeName": "default",
        "x": 1130,
        "y": 300,
        "wires": [
            [
                "ab78e9f2c61b94b1",
                "cc477b5ed883ae03"
            ]
        ]
    },
    {
        "id": "5473cfceeba1dca2",
        "type": "change",
        "z": "cf6783623c678570",
        "d": true,
        "g": "c58defa34619bed1",
        "name": "OPEN GATE",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "open",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "control",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1090,
        "y": 140,
        "wires": [
            [
                "08986cca3b6b02c6",
                "017bd3dc1581d8e7"
            ]
        ]
    },
    {
        "id": "5bd0a600838ed778",
        "type": "change",
        "z": "cf6783623c678570",
        "name": "QUEUE GATE",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "queue",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "control",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 900,
        "y": 660,
        "wires": [
            [
                "08986cca3b6b02c6"
            ]
        ]
    },
    {
        "id": "3e020dc420936440",
        "type": "change",
        "z": "cf6783623c678570",
        "g": "c58defa34619bed1",
        "name": "In Chat = True",
        "rules": [
            {
                "t": "set",
                "p": "botChatInitialized",
                "pt": "flow",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 900,
        "y": 140,
        "wires": [
            [
                "5473cfceeba1dca2"
            ]
        ]
    },
    {
        "id": "ab78e9f2c61b94b1",
        "type": "debug",
        "z": "cf6783623c678570",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1380,
        "y": 200,
        "wires": []
    },
    {
        "id": "c80b73112ee98a88",
        "type": "file in",
        "z": "e7c83390c801a80d",
        "g": "d31b319e0a98a425",
        "name": "",
        "filename": "LatestLogin.log",
        "format": "lines",
        "chunk": false,
        "sendError": false,
        "encoding": "utf-16le",
        "allProps": true,
        "x": 920,
        "y": 1520,
        "wires": [
            [
                "ac10961c22adb501"
            ]
        ]
    },
    {
        "id": "ac10961c22adb501",
        "type": "join",
        "z": "e7c83390c801a80d",
        "g": "d31b319e0a98a425",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "1.5",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1130,
        "y": 1520,
        "wires": [
            [
                "e951bd47d2b1dbae"
            ]
        ]
    },
    {
        "id": "e951bd47d2b1dbae",
        "type": "change",
        "z": "e7c83390c801a80d",
        "g": "d31b319e0a98a425",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "newloginlogs",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "left",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "right",
                "pt": "msg",
                "to": "oldloginlogs",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1300,
        "y": 1520,
        "wires": [
            [
                "0b879b5dec9cb04f"
            ]
        ]
    },
    {
        "id": "c12c335c04b11519",
        "type": "change",
        "z": "e7c83390c801a80d",
        "g": "d31b319e0a98a425",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "oldloginlogs",
                "pt": "flow",
                "to": "newloginlogs",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 1680,
        "wires": [
            []
        ]
    },
    {
        "id": "0b879b5dec9cb04f",
        "type": "differences",
        "z": "e7c83390c801a80d",
        "g": "d31b319e0a98a425",
        "name": "",
        "leftInput": "left",
        "leftInputType": "msg",
        "rightInput": "right",
        "rightInputType": "msg",
        "func": "-",
        "outputType": "msg",
        "output": "payload",
        "x": 1510,
        "y": 1520,
        "wires": [
            [
                "2ac83c22d129027e"
            ]
        ]
    },
    {
        "id": "c505a268bc1f810e",
        "type": "comment",
        "z": "e7c83390c801a80d",
        "g": "d31b319e0a98a425",
        "name": "Get latest login log file.",
        "info": "",
        "x": 460,
        "y": 1460,
        "wires": []
    },
    {
        "id": "9f389076a9b6f73f",
        "type": "split",
        "z": "e7c83390c801a80d",
        "g": "d31b319e0a98a425",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 550,
        "y": 1600,
        "wires": [
            [
                "c12c335c04b11519",
                "3acc0d2a1d6808d1"
            ]
        ]
    },
    {
        "id": "2ac83c22d129027e",
        "type": "switch",
        "z": "e7c83390c801a80d",
        "g": "d31b319e0a98a425",
        "name": "",
        "property": "payload.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lte",
                "v": "100",
                "vt": "str"
            },
            {
                "t": "gt",
                "v": "100",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 410,
        "y": 1600,
        "wires": [
            [
                "9f389076a9b6f73f"
            ],
            [
                "c12c335c04b11519"
            ]
        ]
    },
    {
        "id": "3acc0d2a1d6808d1",
        "type": "switch",
        "z": "e7c83390c801a80d",
        "g": "d31b319e0a98a425",
        "name": "Login OR Logout?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "logged in",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "logging out",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 470,
        "y": 1880,
        "wires": [
            [
                "5c7d207a44f42aa3"
            ],
            [
                "ef03767471d7eb8c"
            ]
        ]
    },
    {
        "id": "5c7d207a44f42aa3",
        "type": "function",
        "z": "e7c83390c801a80d",
        "g": "d31b319e0a98a425",
        "name": "Create Login Object",
        "func": "var a = msg.payload;\nconst login = {};\nlogin.time = {};\nlogin.player = {};\n\nlogin.time.year = a.substr(0, 4);\nlogin.time.month = a.substr(5, 2);\nlogin.time.day = a.substr(8, 2);\nlogin.time.hour = a.substr(11, 2);\nlogin.time.minute = a.substr(14, 2);\nlogin.time.second = a.substr(17, 2);\n\nvar playerdetails = a.substr(a.indexOf(\"'\")+1, ((a.indexOf(\"'\", a.indexOf(\"'\")+1)) - (a.indexOf(\"'\")+1))+1); //can add lastindexof to simplify\nlogin.player.ip = playerdetails.substr(0, playerdetails.indexOf(\" \"));\nlogin.player.steamid = playerdetails.substr(playerdetails.indexOf(\" \")+1, (playerdetails.indexOf(\":\")-playerdetails.indexOf(\" \")-1));\nlogin.player.scumname = playerdetails.substr(playerdetails.indexOf(\":\")+1, (playerdetails.lastIndexOf(\"(\")-playerdetails.indexOf(\":\")-1));\nlogin.player.scumid = playerdetails.substr(playerdetails.lastIndexOf(\"(\")+1, (playerdetails.lastIndexOf(\")\")-playerdetails.lastIndexOf(\"(\")-1));\n\nreturn login;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 1660,
        "wires": [
            [
                "6b3a7ae32a3b68ce"
            ]
        ]
    },
    {
        "id": "6b3a7ae32a3b68ce",
        "type": "function",
        "z": "e7c83390c801a80d",
        "g": "d31b319e0a98a425",
        "name": "Check if New Steam User",
        "func": "msg.topic = \"SELECT * FROM steamUser WHERE steamId = \" + msg.player.steamid\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 1660,
        "wires": [
            [
                "33d1d8df9440d575"
            ]
        ]
    },
    {
        "id": "33d1d8df9440d575",
        "type": "sqlite",
        "z": "e7c83390c801a80d",
        "g": "d31b319e0a98a425",
        "mydb": "2118590cbe579670",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 780,
        "y": 1760,
        "wires": [
            [
                "c94b0e292a3b7a6b"
            ]
        ]
    },
    {
        "id": "c94b0e292a3b7a6b",
        "type": "switch",
        "z": "e7c83390c801a80d",
        "g": "d31b319e0a98a425",
        "name": "",
        "property": "payload.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 930,
        "y": 1760,
        "wires": [
            [
                "a570cdd0a47f576a"
            ],
            [
                "dd8a48d47178cb22"
            ]
        ]
    },
    {
        "id": "a570cdd0a47f576a",
        "type": "function",
        "z": "e7c83390c801a80d",
        "g": "d31b319e0a98a425",
        "name": "Create New Steam User",
        "func": "msg.topic = \"INSERT INTO steamUser(steamId, scumName, ipAddress, scumId) values(\" + msg.player.steamid + \", '\" + msg.player.scumname +\"', '\" + msg.player.ip + \"', \" + msg.player.scumid + \")\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 1740,
        "wires": [
            [
                "a9aee0e04ee1b5d6"
            ]
        ]
    },
    {
        "id": "a9aee0e04ee1b5d6",
        "type": "sqlite",
        "z": "e7c83390c801a80d",
        "g": "d31b319e0a98a425",
        "mydb": "2118590cbe579670",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 1360,
        "y": 1740,
        "wires": [
            [
                "29ac032cc0751b08"
            ]
        ]
    },
    {
        "id": "ef03767471d7eb8c",
        "type": "function",
        "z": "e7c83390c801a80d",
        "g": "d31b319e0a98a425",
        "name": "Create Logout Object",
        "func": "var a = msg.payload;\nconst logout = {};\nlogout.time = {};\nlogout.player = {};\n\nlogout.time.year = a.substr(0, 4);\nlogout.time.month = a.substr(5, 2);\nlogout.time.day = a.substr(8, 2);\nlogout.time.hour = a.substr(11, 2);\nlogout.time.minute = a.substr(14, 2);\nlogout.time.second = a.substr(17, 2);\n\nlogout.player.scumid = a.substr(a.indexOf(\"'\")+1, ((a.indexOf(\"'\", a.indexOf(\"'\")+1)) - (a.indexOf(\"'\")+1))); //can add lastindexof to simplify\n\nreturn logout;\n\n\n//2021.09.09-14.38.56: '89' logging out",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 2040,
        "wires": [
            [
                "5d0e430b6aa8b51f"
            ]
        ]
    },
    {
        "id": "5d0e430b6aa8b51f",
        "type": "function",
        "z": "e7c83390c801a80d",
        "g": "d31b319e0a98a425",
        "name": "Fetch Steam User Logging Out",
        "func": "msg.topic = \"SELECT * FROM steamUser WHERE scumId = \" + msg.player.scumid;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 2040,
        "wires": [
            [
                "33dff353b4411c99"
            ]
        ]
    },
    {
        "id": "33dff353b4411c99",
        "type": "sqlite",
        "z": "e7c83390c801a80d",
        "g": "d31b319e0a98a425",
        "mydb": "2118590cbe579670",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 1220,
        "y": 2040,
        "wires": [
            [
                "8719de7f5a89d239"
            ]
        ]
    },
    {
        "id": "29ac032cc0751b08",
        "type": "function",
        "z": "e7c83390c801a80d",
        "g": "d31b319e0a98a425",
        "name": "format login message (New Player)",
        "func": "msg.payload = \"```diff\\n+login Time: [\" + msg.time.hour + \":\" + msg.time.minute + \":\" + msg.time.second + \"] ID: [\" + msg.player.steamid + \"] Name: [\" + msg.player.scumname + \"] [THIS IS A NEW PLAYER]\\n```\";\nmsg.channel = flow.get(\"channelIDLogin\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1480,
        "y": 1840,
        "wires": [
            [
                "279676a4af56caf6"
            ]
        ]
    },
    {
        "id": "8719de7f5a89d239",
        "type": "function",
        "z": "e7c83390c801a80d",
        "g": "d31b319e0a98a425",
        "name": "format logout message",
        "func": "msg.payload = \"```diff\\n-logout Time: [\" + msg.time.hour + \":\" + msg.time.minute + \":\" + msg.time.second + \"] ID: [\" + msg.payload[0].steamId + \"] Name: [\" + msg.payload[0].scumName + \"]\\n```\";\nmsg.channel = flow.get(\"channelIDLogin\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1440,
        "y": 2000,
        "wires": [
            [
                "279676a4af56caf6"
            ]
        ]
    },
    {
        "id": "de211fa98e101295",
        "type": "function",
        "z": "e7c83390c801a80d",
        "g": "d31b319e0a98a425",
        "name": "format login message (Existing Player)",
        "func": "msg.payload = \"```diff\\n+login Time: [\" + msg.time.hour + \":\" + msg.time.minute + \":\" + msg.time.second + \"] ID: [\" + msg.player.steamid + \"] Name: [\" + msg.player.scumname + \"]\\n```\";\nmsg.channel = flow.get(\"channelIDLogin\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1490,
        "y": 1880,
        "wires": [
            [
                "279676a4af56caf6"
            ]
        ]
    },
    {
        "id": "dd8a48d47178cb22",
        "type": "switch",
        "z": "e7c83390c801a80d",
        "g": "d31b319e0a98a425",
        "name": "Check Name Change",
        "property": "payload[0].scumId",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "player.scumid",
                "vt": "msg"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 960,
        "y": 1840,
        "wires": [
            [
                "de211fa98e101295"
            ],
            [
                "ce2adbabcfd9ccf5",
                "9cf5b0b92d40a5fb"
            ]
        ]
    },
    {
        "id": "ce2adbabcfd9ccf5",
        "type": "function",
        "z": "e7c83390c801a80d",
        "g": "d31b319e0a98a425",
        "name": "Update Player's Name and scumID",
        "func": "msg.topic = \"UPDATE steamUser SET scumId = \" + msg.player.scumid + \", scumName = \\\"\" + msg.player.scumname + \"\\\" WHERE steamId = \" + msg.player.steamid;\nmsg.payload = \"\";\nreturn msg;\n\n//\"UPDATE steamUser SET scumName = 'Chappie 3.0', scumId = 1362;\"",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 1900,
        "wires": [
            [
                "44b4c9a87f37ac13"
            ]
        ]
    },
    {
        "id": "9cf5b0b92d40a5fb",
        "type": "function",
        "z": "e7c83390c801a80d",
        "g": "d31b319e0a98a425",
        "name": "format login message (Existing Player/New Name)",
        "func": "msg.payload = \"```diff\\n+login Time: [\" + msg.time.hour + \":\" + msg.time.minute + \":\" + msg.time.second + \"] ID: [\" + msg.player.steamid + \"] Name: [\" + msg.player.scumname + \"] [NAME CHANGED! Old Name: \" + msg.payload[0].scumName +\"]\\n```\";\nmsg.channel = flow.get(\"channelIDLogin\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1530,
        "y": 1920,
        "wires": [
            [
                "279676a4af56caf6"
            ]
        ]
    },
    {
        "id": "44b4c9a87f37ac13",
        "type": "sqlite",
        "z": "e7c83390c801a80d",
        "g": "d31b319e0a98a425",
        "mydb": "2118590cbe579670",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 1180,
        "y": 1920,
        "wires": [
            []
        ]
    },
    {
        "id": "3fe467ba9bc5d523",
        "type": "comment",
        "z": "444ae17e1e6afb91",
        "g": "79fa116804b14942",
        "name": "get current FP balance",
        "info": "",
        "x": 2100,
        "y": 80,
        "wires": []
    },
    {
        "id": "e0a704f5a7a3c5d9",
        "type": "split",
        "z": "444ae17e1e6afb91",
        "g": "79fa116804b14942",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1990,
        "y": 200,
        "wires": [
            [
                "da133acacbacea90"
            ]
        ]
    },
    {
        "id": "da133acacbacea90",
        "type": "function",
        "z": "444ae17e1e6afb91",
        "g": "79fa116804b14942",
        "name": "",
        "func": "var a = msg.payload\n\nvar steamID = a.substr(4, 17);\nvar fame = a.substring(97, a.indexOf(\" \",97));\n\nmsg.payload = '{ \"steamID\":\"' + steamID +'\", \"fame\":\"'+ fame + '\" }';\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2140,
        "y": 200,
        "wires": [
            [
                "da79fba144ec6667"
            ]
        ]
    },
    {
        "id": "e7e76f2b439fc437",
        "type": "switch",
        "z": "444ae17e1e6afb91",
        "g": "79fa116804b14942",
        "name": "Update only one user?",
        "property": "payload.steamID",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "steamID",
                "vt": "msg"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2440,
        "y": 260,
        "wires": [
            [
                "6cbc646ca7283680"
            ],
            []
        ]
    },
    {
        "id": "df931e0fbaa62e10",
        "type": "sqlite",
        "z": "444ae17e1e6afb91",
        "g": "79fa116804b14942",
        "mydb": "2118590cbe579670",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 2800,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "da79fba144ec6667",
        "type": "json",
        "z": "444ae17e1e6afb91",
        "g": "79fa116804b14942",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 2290,
        "y": 200,
        "wires": [
            [
                "e7e76f2b439fc437"
            ]
        ]
    },
    {
        "id": "6cbc646ca7283680",
        "type": "function",
        "z": "444ae17e1e6afb91",
        "g": "79fa116804b14942",
        "name": "",
        "func": "    msg.topic = \"UPDATE steamUser SET fame = \" + msg.payload.fame + \", lastUpdateTimeFP = \" + Date.now() + \" WHERE steamId = \" + msg.payload.steamID;\n    msg.payload = \"\";\n    return msg;\n//\"UPDATE steamUser SET scumName = 'Chappie 3.0', scumId = 1362;\"",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2580,
        "y": 200,
        "wires": [
            [
                "df931e0fbaa62e10"
            ]
        ]
    },
    {
        "id": "1af0582272132dec",
        "type": "link out",
        "z": "444ae17e1e6afb91",
        "g": "79fa116804b14942",
        "name": "",
        "links": [
            "4bf33cd129b8456e"
        ],
        "x": 2335,
        "y": 140,
        "wires": []
    },
    {
        "id": "7c8dc39c0787a8b5",
        "type": "function",
        "z": "444ae17e1e6afb91",
        "g": "79fa116804b14942",
        "name": "request balances",
        "func": "msg.payload = '{ \"type\": \"fetchReturn\", \"args\": [{ \"command\":\"#ListPlayers true\" , \"steamID\":\"' + msg.steamID +'\" }]}';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2190,
        "y": 140,
        "wires": [
            [
                "1af0582272132dec",
                "3b223ac27bb8f2f8"
            ]
        ]
    },
    {
        "id": "4bf33cd129b8456e",
        "type": "link in",
        "z": "cf6783623c678570",
        "name": "balance check",
        "links": [
            "1af0582272132dec"
        ],
        "x": 215,
        "y": 340,
        "wires": [
            [
                "08986cca3b6b02c6"
            ]
        ]
    },
    {
        "id": "951ee49572458767",
        "type": "switch",
        "z": "cf6783623c678570",
        "name": "",
        "property": "payload.command",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "#ListPlayers true",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 410,
        "y": 440,
        "wires": [
            [
                "795e23296d008e15"
            ],
            []
        ]
    },
    {
        "id": "795e23296d008e15",
        "type": "link out",
        "z": "cf6783623c678570",
        "name": "Receive FP Balances",
        "links": [
            "9632ecfc39a338dd"
        ],
        "x": 575,
        "y": 440,
        "wires": []
    },
    {
        "id": "9632ecfc39a338dd",
        "type": "link in",
        "z": "444ae17e1e6afb91",
        "g": "79fa116804b14942",
        "name": "Receive FP Balances",
        "links": [
            "795e23296d008e15"
        ],
        "x": 2495,
        "y": 140,
        "wires": [
            [
                "4d8d03937ff91d7b"
            ]
        ]
    },
    {
        "id": "de425de218f9de2b",
        "type": "json",
        "z": "cf6783623c678570",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 270,
        "y": 440,
        "wires": [
            [
                "951ee49572458767"
            ]
        ]
    },
    {
        "id": "4d8d03937ff91d7b",
        "type": "change",
        "z": "444ae17e1e6afb91",
        "g": "79fa116804b14942",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "steamID",
                "pt": "msg",
                "to": "payload.steamID",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.results",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2640,
        "y": 140,
        "wires": [
            [
                "e0a704f5a7a3c5d9",
                "2eeb45a4aca74e7e"
            ]
        ]
    },
    {
        "id": "963fa2554cc12567",
        "type": "link out",
        "z": "e7c83390c801a80d",
        "g": "935e59a53e14ca1a",
        "name": "buy item",
        "links": [
            "aa07c2913068413b"
        ],
        "x": 3555,
        "y": 1640,
        "wires": []
    },
    {
        "id": "ca025012d053dce4",
        "type": "link in",
        "z": "444ae17e1e6afb91",
        "g": "d943bdc9165c0a7c",
        "name": "register user",
        "links": [
            "d559745eea4ff202"
        ],
        "x": 155,
        "y": 420,
        "wires": [
            [
                "e0453946d36563d4"
            ]
        ]
    },
    {
        "id": "d559745eea4ff202",
        "type": "link out",
        "z": "e7c83390c801a80d",
        "g": "935e59a53e14ca1a",
        "name": "register user",
        "links": [
            "ca025012d053dce4"
        ],
        "x": 3555,
        "y": 1680,
        "wires": []
    },
    {
        "id": "e0453946d36563d4",
        "type": "function",
        "z": "444ae17e1e6afb91",
        "g": "d943bdc9165c0a7c",
        "name": "check if already registered",
        "func": "msg.topic = \"SELECT * FROM steamUser WHERE discordID = \" + msg.author.id\n//msg.topic = \"SELECT * FROM steamUser WHERE discordID = \" + msg.author.id\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 420,
        "wires": [
            [
                "96fad1634e6877cb"
            ]
        ]
    },
    {
        "id": "96fad1634e6877cb",
        "type": "sqlite",
        "z": "444ae17e1e6afb91",
        "g": "d943bdc9165c0a7c",
        "mydb": "2118590cbe579670",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 590,
        "y": 420,
        "wires": [
            [
                "e6709cc77734b8c0"
            ]
        ]
    },
    {
        "id": "e6709cc77734b8c0",
        "type": "switch",
        "z": "444ae17e1e6afb91",
        "g": "d943bdc9165c0a7c",
        "name": "",
        "property": "payload.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lt",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 310,
        "y": 500,
        "wires": [
            [
                "33f612bcf161341e"
            ],
            [
                "6b736c62f473a481"
            ],
            []
        ]
    },
    {
        "id": "208fa2908592394d",
        "type": "function",
        "z": "444ae17e1e6afb91",
        "g": "d943bdc9165c0a7c",
        "name": "Register New User",
        "func": "msg.payload = \"Please send the following code in the SCUM in-game local chat (including the $): \\n```\\n\" + msg.registrationID + \"\\n```\";\nmsg.user = msg.author.id;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 480,
        "wires": [
            [
                "bdde5ce80e73e096"
            ]
        ]
    },
    {
        "id": "6b736c62f473a481",
        "type": "function",
        "z": "444ae17e1e6afb91",
        "g": "d943bdc9165c0a7c",
        "name": "Registered",
        "func": "msg.payload = \"<@\" + msg.author.id + \">\\n```\\n You are already registered as \" + msg.payload[0].scumName  + \"```\";\nmsg.channel = msg.channel.id;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 540,
        "wires": [
            [
                "bdde5ce80e73e096"
            ]
        ]
    },
    {
        "id": "bda9f0bcd0c7ce5d",
        "type": "sqlite",
        "z": "444ae17e1e6afb91",
        "g": "d943bdc9165c0a7c",
        "mydb": "2118590cbe579670",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 800,
        "y": 480,
        "wires": [
            [
                "208fa2908592394d"
            ]
        ]
    },
    {
        "id": "bdde5ce80e73e096",
        "type": "discordMessageManager",
        "z": "444ae17e1e6afb91",
        "name": "Send Discord Message",
        "channel": "",
        "token": "934fbc5791d441db",
        "x": 1530,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "4485eefb1a057ce5",
        "type": "link in",
        "z": "444ae17e1e6afb91",
        "g": "058db8f4097386b6",
        "name": "registration listener",
        "links": [
            "0249fbf976c5684c"
        ],
        "x": 155,
        "y": 760,
        "wires": [
            [
                "92dca865c2015a14"
            ]
        ]
    },
    {
        "id": "92dca865c2015a14",
        "type": "switch",
        "z": "444ae17e1e6afb91",
        "g": "058db8f4097386b6",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "$registered",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 250,
        "y": 760,
        "wires": [
            [
                "1c02c61c6de09977"
            ]
        ]
    },
    {
        "id": "33f612bcf161341e",
        "type": "function",
        "z": "444ae17e1e6afb91",
        "g": "d943bdc9165c0a7c",
        "name": "Not Registered",
        "func": "msg.registrationID = \"$registered\" + Math.floor(Math.random() * 100000);\nmsg.topic = \"INSERT INTO discordUser (discordID, registered, registrationID) VALUES(\" + msg.author.id + \", 0, \\\"\" + msg.registrationID + \"\\\");\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 480,
        "wires": [
            [
                "bda9f0bcd0c7ce5d"
            ]
        ]
    },
    {
        "id": "d5d5f15b966575aa",
        "type": "function",
        "z": "e7c83390c801a80d",
        "g": "59f969dbefde3c20",
        "name": "CREATE Tables",
        "func": "msg.topic = \"CREATE TABLE IF NOT EXISTS discordUser (discordID INTEGER PRIMARY KEY, registrationID TEXT, registered BOOL);\";\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2920,
        "y": 1800,
        "wires": [
            [
                "ae718095be210f28"
            ]
        ]
    },
    {
        "id": "36714cfa1c9af40e",
        "type": "catch",
        "z": "444ae17e1e6afb91",
        "g": "d943bdc9165c0a7c",
        "name": "",
        "scope": [
            "bda9f0bcd0c7ce5d"
        ],
        "uncaught": false,
        "x": 810,
        "y": 600,
        "wires": [
            [
                "52ca7f127d8b5efc"
            ]
        ]
    },
    {
        "id": "52ca7f127d8b5efc",
        "type": "function",
        "z": "444ae17e1e6afb91",
        "g": "d943bdc9165c0a7c",
        "name": "Issue: Register New User",
        "func": "msg.payload = \"```\\nRegistration process failed. Please contact the server admin.\\n```\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 600,
        "wires": [
            [
                "bdde5ce80e73e096"
            ]
        ]
    },
    {
        "id": "1c02c61c6de09977",
        "type": "function",
        "z": "444ae17e1e6afb91",
        "g": "058db8f4097386b6",
        "name": "Find user with equal pending regCode",
        "func": "msg.topic = \"SELECT * FROM discordUser WHERE registrationID = \\\"\" + msg.message + \"\\\" AND registered = 0;\";\nmsg.newPayload = msg.payload;\nmsg.payload= \"\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 760,
        "wires": [
            [
                "dfb5527821bfee34"
            ]
        ]
    },
    {
        "id": "dfb5527821bfee34",
        "type": "sqlite",
        "z": "444ae17e1e6afb91",
        "g": "058db8f4097386b6",
        "mydb": "2118590cbe579670",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 740,
        "y": 760,
        "wires": [
            [
                "fd0b33f75410a082"
            ]
        ]
    },
    {
        "id": "fd0b33f75410a082",
        "type": "switch",
        "z": "444ae17e1e6afb91",
        "g": "058db8f4097386b6",
        "name": "",
        "property": "payload.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 250,
        "y": 860,
        "wires": [
            [
                "2fef6db1bbe0f2b4",
                "2243594e1c9affaa"
            ],
            []
        ]
    },
    {
        "id": "2fef6db1bbe0f2b4",
        "type": "function",
        "z": "444ae17e1e6afb91",
        "g": "058db8f4097386b6",
        "name": "update steamUser with new discordID",
        "func": "msg.topic = \"UPDATE steamUser SET discordID = \" + msg.payload[0].discordID + \" WHERE steamID = \" + msg.ID + \";\";\nmsg.newPayload = msg.payload;\nmsg.payload= \"\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 860,
        "wires": [
            [
                "b1d9d5edb5f642c0"
            ]
        ]
    },
    {
        "id": "2243594e1c9affaa",
        "type": "function",
        "z": "444ae17e1e6afb91",
        "g": "058db8f4097386b6",
        "name": "Set discordUser registered = 1",
        "func": "msg.topic = \"UPDATE discordUser SET registered = 1 WHERE discordID = \" + msg.payload[0].discordID + \";\";\nmsg.newPayload = msg.payload;\nmsg.payload= \"\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 900,
        "wires": [
            [
                "02e0689261cc7220"
            ]
        ]
    },
    {
        "id": "b1d9d5edb5f642c0",
        "type": "sqlite",
        "z": "444ae17e1e6afb91",
        "g": "058db8f4097386b6",
        "mydb": "2118590cbe579670",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 760,
        "y": 860,
        "wires": [
            [
                "0eb3fd4ee110fc23"
            ]
        ]
    },
    {
        "id": "0eb3fd4ee110fc23",
        "type": "function",
        "z": "444ae17e1e6afb91",
        "g": "058db8f4097386b6",
        "name": "Welcome Registered User",
        "func": "msg.payload = \"<@\" + msg.newPayload[0].discordID + \">\\n```\\n You are now registered as \" + msg.name  + \"```\";\nmsg.user = msg.newPayload[0].discordID;\nmsg.channel = \"\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 840,
        "wires": [
            [
                "bdde5ce80e73e096"
            ]
        ]
    },
    {
        "id": "02e0689261cc7220",
        "type": "sqlite",
        "z": "444ae17e1e6afb91",
        "g": "058db8f4097386b6",
        "mydb": "2118590cbe579670",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 760,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "368c9b39c5923827",
        "type": "comment",
        "z": "444ae17e1e6afb91",
        "g": "d943bdc9165c0a7c",
        "name": "Handle $register",
        "info": "",
        "x": 290,
        "y": 360,
        "wires": []
    },
    {
        "id": "02be798431dca5e5",
        "type": "comment",
        "z": "444ae17e1e6afb91",
        "g": "058db8f4097386b6",
        "name": "confirm unique reg code",
        "info": "",
        "x": 330,
        "y": 700,
        "wires": []
    },
    {
        "id": "8a887142bc8126b5",
        "type": "function",
        "z": "444ae17e1e6afb91",
        "g": "79fa116804b14942",
        "name": "Set TCP Payload steamID",
        "func": "flow.set(\"orderQueue\", msg._queueCount);\nmsg.steamID = msg.payload.orderData.steamId\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1970,
        "y": 140,
        "wires": [
            [
                "7c8dc39c0787a8b5"
            ]
        ]
    },
    {
        "id": "e60f2910a67b9d24",
        "type": "debug",
        "z": "cf6783623c678570",
        "name": "TCP Incoming Messages",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 190,
        "y": 400,
        "wires": []
    },
    {
        "id": "a58e963d867a0e82",
        "type": "switch",
        "z": "444ae17e1e6afb91",
        "g": "79fa116804b14942",
        "name": "",
        "property": "payload.steamID",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "SteamID64        ",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 2430,
        "y": 200,
        "wires": [
            [
                "6cbc646ca7283680"
            ]
        ]
    },
    {
        "id": "64056f1001fb082a",
        "type": "switch",
        "z": "444ae17e1e6afb91",
        "g": "8b891dd4611c028d",
        "name": "lastUpdateTimeFP vs orderTime",
        "property": "payload[0].lastUpdateTimeFP",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gte",
                "v": "orderTime",
                "vt": "msg"
            },
            {
                "t": "lt",
                "v": "orderTime",
                "vt": "msg"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2470,
        "y": 780,
        "wires": [
            [
                "c8624c97907f4139",
                "1cf8f7f6bf7fef1b"
            ],
            [
                "e4eee9c05cb37a3b"
            ]
        ]
    },
    {
        "id": "d46ef8c103502869",
        "type": "delay",
        "z": "444ae17e1e6afb91",
        "g": "8b891dd4611c028d",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "x": 2580,
        "y": 520,
        "wires": [
            [
                "c5099ac8a0952b16"
            ]
        ]
    },
    {
        "id": "c5099ac8a0952b16",
        "type": "function",
        "z": "444ae17e1e6afb91",
        "g": "8b891dd4611c028d",
        "name": "count balance waits",
        "func": "msg.balanceWaitCount = msg.balanceWaitCount+1;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2190,
        "y": 420,
        "wires": [
            [
                "de1411a936bf16fa"
            ]
        ]
    },
    {
        "id": "de1411a936bf16fa",
        "type": "switch",
        "z": "444ae17e1e6afb91",
        "g": "8b891dd4611c028d",
        "name": "",
        "property": "balanceWaitCount",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lt",
                "v": "15",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2350,
        "y": 420,
        "wires": [
            [
                "409d7b7f76d25d6a"
            ],
            []
        ]
    },
    {
        "id": "9da70ced5f3dd112",
        "type": "comment",
        "z": "444ae17e1e6afb91",
        "g": "8b891dd4611c028d",
        "name": "Wait for up to date balance",
        "info": "",
        "x": 2290,
        "y": 360,
        "wires": []
    },
    {
        "id": "1630574840947d56",
        "type": "comment",
        "z": "444ae17e1e6afb91",
        "g": "4d2d08a55c9a69ac",
        "name": "Check Price Against Balance",
        "info": "",
        "x": 1960,
        "y": 960,
        "wires": []
    },
    {
        "id": "5c9e59b139eec860",
        "type": "function",
        "z": "444ae17e1e6afb91",
        "g": "8b891dd4611c028d",
        "name": "count balance waits",
        "func": "msg.balanceWaitCount = 0;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1870,
        "y": 420,
        "wires": [
            [
                "c5099ac8a0952b16"
            ]
        ]
    },
    {
        "id": "409d7b7f76d25d6a",
        "type": "function",
        "z": "444ae17e1e6afb91",
        "g": "8b891dd4611c028d",
        "name": "Search DB for steamUser",
        "func": "msg.newPayload = msg.payload;\nmsg.payload = \"\";\nmsg.topic = \"SELECT * FROM steamUser WHERE discordID = \" + msg.data.authorID\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1990,
        "y": 780,
        "wires": [
            [
                "0c14e1faa7d8baaa",
                "333c655abf0a0027"
            ]
        ]
    },
    {
        "id": "0c14e1faa7d8baaa",
        "type": "sqlite",
        "z": "444ae17e1e6afb91",
        "g": "8b891dd4611c028d",
        "mydb": "2118590cbe579670",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 2220,
        "y": 780,
        "wires": [
            [
                "64056f1001fb082a"
            ]
        ]
    },
    {
        "id": "1cf8f7f6bf7fef1b",
        "type": "function",
        "z": "444ae17e1e6afb91",
        "g": "4d2d08a55c9a69ac",
        "name": "Get price",
        "func": "msg.userDetails = msg.payload;\nmsg.payload = \"\";\nmsg.topic = \"SELECT * FROM packs WHERE name = \\\"\" + msg.purchaseItem + \"\\\";\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1900,
        "y": 1000,
        "wires": [
            [
                "ee2ec6f85b4450f5"
            ]
        ]
    },
    {
        "id": "9b906524a06e1441",
        "type": "switch",
        "z": "444ae17e1e6afb91",
        "g": "4d2d08a55c9a69ac",
        "name": "",
        "property": "payload[0].fpCost",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "userDetails[0].fame",
                "vt": "msg"
            },
            {
                "t": "lte",
                "v": "userDetails[0].fame",
                "vt": "msg"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 2450,
        "y": 1000,
        "wires": [
            [
                "68c4a3f68c4aef42"
            ],
            [
                "ee12473e41df7d1a"
            ],
            []
        ]
    },
    {
        "id": "68c4a3f68c4aef42",
        "type": "function",
        "z": "444ae17e1e6afb91",
        "g": "4d2d08a55c9a69ac",
        "name": "Not enough FP",
        "func": "msg.transactionTime = (Date.now() - msg.newPayload.createdTimestamp)/1000 + \" seconds\";\nmsg.payload = \"<@\" + msg.newPayload.discordID + \">\\n```\\nYou have insufficient FP.\\nOrder cost: \" + msg.payload[0].fpCost + \"\\nAvailable FP: \" + msg.newPayload.fame + \"\\nOrder processed in \" + msg.transactionTime + \"```\";\nmsg.action = \"edit\";\nmsg.channel = msg.newPayload.discordMsg.channelID;\nmsg.message = msg.newPayload.discordMsg.id;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2620,
        "y": 980,
        "wires": [
            [
                "64d0352688361f73",
                "b4a47a43a96b9456",
                "c17ff235349b0b07"
            ]
        ]
    },
    {
        "id": "ee12473e41df7d1a",
        "type": "function",
        "z": "444ae17e1e6afb91",
        "g": "4d2d08a55c9a69ac",
        "name": "Can afford, proceed",
        "func": "msg.newBalance = msg.userDetails[0].fame - msg.payload[0].fpCost;\nmsg.transactionTime = (Date.now() - msg.newPayload.discordMsg.createdTimestamp)/1000 + \" seconds\";\nmsg.itemDetails = msg.payload;\nmsg.payload = \"<@\" + msg.newPayload.orderData.discordID + \">\\n```\\nOrder processed. Please wait for delivery. Your new balance is \" + msg.newBalance + \"FP. \\nOrder processed in \" + msg.transactionTime + \"```\";\nmsg.action = \"edit\";\nmsg.channel = msg.newPayload.discordMsg.channelID;\nmsg.message = msg.newPayload.discordMsg.id;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2640,
        "y": 1020,
        "wires": [
            [
                "ab255d4894438926",
                "b4a47a43a96b9456",
                "5d6f4bad5ea5f6c5",
                "b6257d163b4debaa"
            ]
        ]
    },
    {
        "id": "64d0352688361f73",
        "type": "debug",
        "z": "444ae17e1e6afb91",
        "g": "4d2d08a55c9a69ac",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2610,
        "y": 940,
        "wires": []
    },
    {
        "id": "ab255d4894438926",
        "type": "debug",
        "z": "444ae17e1e6afb91",
        "g": "4d2d08a55c9a69ac",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2610,
        "y": 1060,
        "wires": []
    },
    {
        "id": "e4eee9c05cb37a3b",
        "type": "change",
        "z": "444ae17e1e6afb91",
        "g": "8b891dd4611c028d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "newPayload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2700,
        "y": 600,
        "wires": [
            [
                "d46ef8c103502869"
            ]
        ]
    },
    {
        "id": "aa07c2913068413b",
        "type": "link in",
        "z": "444ae17e1e6afb91",
        "g": "9947ed56b0b80a62",
        "name": "buy item",
        "links": [
            "963fa2554cc12567"
        ],
        "x": 155,
        "y": 160,
        "wires": [
            [
                "e0cdca4251f55115"
            ]
        ]
    },
    {
        "id": "e0cdca4251f55115",
        "type": "function",
        "z": "444ae17e1e6afb91",
        "g": "9947ed56b0b80a62",
        "name": "Strip $buy from buy command",
        "func": "msg.purchaseItem = msg.payload.substring(5);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 140,
        "wires": [
            [
                "ee7686d47d39d6e9"
            ]
        ]
    },
    {
        "id": "6dbd63620c5c0eec",
        "type": "sqlite",
        "z": "444ae17e1e6afb91",
        "g": "9947ed56b0b80a62",
        "mydb": "2118590cbe579670",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 540,
        "y": 200,
        "wires": [
            [
                "64b041ea34487670"
            ]
        ]
    },
    {
        "id": "ee7686d47d39d6e9",
        "type": "function",
        "z": "444ae17e1e6afb91",
        "g": "9947ed56b0b80a62",
        "name": "Search DB for steamUser",
        "func": "msg.topic = \"SELECT * FROM steamUser WHERE discordID = \" + msg.author.id\nmsg.payload.id = \"\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 200,
        "wires": [
            [
                "6dbd63620c5c0eec"
            ]
        ]
    },
    {
        "id": "64b041ea34487670",
        "type": "switch",
        "z": "444ae17e1e6afb91",
        "g": "9947ed56b0b80a62",
        "name": "",
        "property": "payload.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "lt",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 730,
        "y": 200,
        "wires": [
            [
                "b6a5cc3f386e927e",
                "c2c413acbae5b288"
            ],
            [
                "84abeba949c892f6"
            ],
            [
                "eeddc11f8399dcf8"
            ]
        ]
    },
    {
        "id": "84abeba949c892f6",
        "type": "function",
        "z": "444ae17e1e6afb91",
        "g": "9947ed56b0b80a62",
        "name": "Not Registered - Cannot buy",
        "func": "msg.payload = \"```Not Registered. Please use $register```\";\nmsg.channel = msg.channel.id;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 220,
        "wires": [
            [
                "bdde5ce80e73e096"
            ]
        ]
    },
    {
        "id": "b6a5cc3f386e927e",
        "type": "function",
        "z": "444ae17e1e6afb91",
        "g": "9947ed56b0b80a62",
        "name": "Registered - Can buy",
        "func": "const newMsg = {};\nnewMsg.payloadNew = msg.payload;\nvar queuePos = flow.get(\"orderQueue\");\nnewMsg.payload = \"<@\" + msg.author.id + \">\\n```Processing your order... You are number \" + (queuePos+1) + \" in the queue.```\";\nnewMsg.channel = msg.channel.id;\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 180,
        "wires": [
            [
                "91273fae1e26be37"
            ]
        ]
    },
    {
        "id": "eeddc11f8399dcf8",
        "type": "debug",
        "z": "444ae17e1e6afb91",
        "g": "9947ed56b0b80a62",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1010,
        "y": 260,
        "wires": []
    },
    {
        "id": "60fd57328c64690e",
        "type": "comment",
        "z": "444ae17e1e6afb91",
        "g": "9947ed56b0b80a62",
        "name": "Check if can buy",
        "info": "",
        "x": 240,
        "y": 100,
        "wires": []
    },
    {
        "id": "91273fae1e26be37",
        "type": "discordMessageManager",
        "z": "444ae17e1e6afb91",
        "g": "9947ed56b0b80a62",
        "name": "Send Discord Message",
        "channel": "",
        "token": "934fbc5791d441db",
        "x": 1310,
        "y": 180,
        "wires": [
            [
                "e6098bd9e86da786"
            ]
        ]
    },
    {
        "id": "c2c413acbae5b288",
        "type": "function",
        "z": "444ae17e1e6afb91",
        "g": "9947ed56b0b80a62",
        "name": "Main Flow",
        "func": "msg.topic = \"orderData\";\nmsg.parts = \"\";\nmsg.orderState = \"processing\";\nmsg.orderTime = Date.now();\nmsg.payload = msg.payload[0];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 40,
        "wires": [
            [
                "6f2b75efab86fc12"
            ]
        ]
    },
    {
        "id": "b4a47a43a96b9456",
        "type": "discordMessageManager",
        "z": "444ae17e1e6afb91",
        "g": "4d2d08a55c9a69ac",
        "name": "Send Discord Message",
        "channel": "",
        "token": "934fbc5791d441db",
        "x": 2910,
        "y": 980,
        "wires": [
            []
        ]
    },
    {
        "id": "c8624c97907f4139",
        "type": "debug",
        "z": "444ae17e1e6afb91",
        "g": "8b891dd4611c028d",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2830,
        "y": 780,
        "wires": []
    },
    {
        "id": "9263393f1b5c3a7c",
        "type": "function",
        "z": "e7c83390c801a80d",
        "g": "f0dc09849048ecc9",
        "name": "Get Filenames",
        "func": "function timeout(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nvar dir = flow.get(\"workingDir\");\nvar host = flow.get(\"host\");\nvar port = flow.get(\"port\");\nvar username = flow.get(\"username\");\nvar password = flow.get(\"password\");\n\nconst client = new ftp.Client()\nclient.ftp.verbose = true\ntry {\n    await client.access({\n        host: host,\n        port: port,\n        user: username,\n        password: password\n    })\n    msg.connection = \"Get Filenames: Connection Open\";\n    while (flow.get(\"tail\")) {\n        msg.payload = await(await client.list(dir));\n        node.send(msg);\n        await timeout(30000);\n    }\n}\ncatch (err) {\n    console.log(err)\n    return err;\n}\nclient.close()\n//msg.payload = \"Connection Closed.\"\nreturn",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "ftp",
                "module": "basic-ftp"
            }
        ],
        "x": 860,
        "y": 160,
        "wires": [
            [
                "9e6fc2ca03098c90",
                "3650b8fff823bbbc"
            ]
        ]
    },
    {
        "id": "9e6fc2ca03098c90",
        "type": "switch",
        "z": "e7c83390c801a80d",
        "g": "f0dc09849048ecc9",
        "name": "Restart closed connection",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Connection Closed.",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 850,
        "y": 240,
        "wires": [
            [
                "9263393f1b5c3a7c"
            ],
            [
                "b9bca31a0e9de6c0",
                "4cdfa87d977b96c6"
            ]
        ]
    },
    {
        "id": "b9bca31a0e9de6c0",
        "type": "function",
        "z": "e7c83390c801a80d",
        "g": "f0dc09849048ecc9",
        "name": "Split log types",
        "func": "const arr = msg.payload;\n\nvar adminresult = arr.filter(item => item.name.includes('admin_'));\nvar chatresult = arr.filter(item => item.name.includes('chat_'));\nvar killresult = arr.filter(item => item.name.includes('kill_'));\nvar loginresult = arr.filter(item => item.name.includes('login_'));\nvar minesresult = arr.filter(item => item.name.includes('mines_'));\nvar violationsresult = arr.filter(item => item.name.includes('violations_'));\n\nmsg.admin = adminresult;\nmsg.chat = chatresult;\nmsg.kill = killresult;\nmsg.login = loginresult;\nmsg.mines = minesresult;\nmsg.violations = violationsresult;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 160,
        "wires": [
            [
                "8ab2a5cc7149c3cc"
            ]
        ]
    },
    {
        "id": "8ab2a5cc7149c3cc",
        "type": "function",
        "z": "e7c83390c801a80d",
        "g": "f0dc09849048ecc9",
        "name": "Get Latest Log File Names",
        "func": "flow.set(\"LatestAdminFile\", msg.admin[msg.admin.length-1].name);\nflow.set(\"LatestChatFile\", msg.chat[msg.chat.length-1].name);\nflow.set(\"LatestKillFile\", msg.kill[msg.kill.length-1].name);\nflow.set(\"LatestLoginFile\", msg.login[msg.login.length-1].name);\nflow.set(\"LatestMinesFile\", msg.mines[msg.mines.length-1].name);\nflow.set(\"LatestViolationsFile\", msg.violations[msg.violations.length-1].name);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1180,
        "y": 240,
        "wires": [
            [
                "81c0221d45cd243f"
            ]
        ]
    },
    {
        "id": "c6fea49f09e43e45",
        "type": "function",
        "z": "e7c83390c801a80d",
        "g": "7c72005ea0dd4a7e",
        "name": "Download Lates Admin Log",
        "func": "function timeout(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nvar dir = flow.get(\"workingDir\");\nvar host = flow.get(\"host\");\nvar port = flow.get(\"port\");\nvar username = flow.get(\"username\");\nvar password = flow.get(\"password\");\n\nconst client = new ftp.Client()\nclient.ftp.verbose = true;\nflow.set(\"tail\", true);\ntry {\n    await client.access({\n        host: host,\n        port: port,\n        user: username,\n        password: password\n    })\n    msg.connection = await(\"Download Admin Log: Connection Open\");\n    await client.ensureDir(dir);\n    while (flow.get(\"tail\")) {\n        var latestLogfileName = flow.get(\"LatestAdminFile\");\n        //await client.downloadToDir(\"/data/logs\");\n        await client.downloadTo(\"LatestAdmin.log\", latestLogfileName);\n        msg.payload = await(\"Downloaded file: \" + latestLogfileName);\n        node.send(msg);\n        await timeout(2000);\n    }\n}\ncatch (err) {\n    console.log(err)\n    return err;\n}\nclient.close()\nmsg.payload = \"Connection Closed.\";\nmsg.connection = \"Download Admin Log: Connection Closed\";\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "ftp",
                "module": "basic-ftp"
            }
        ],
        "x": 660,
        "y": 520,
        "wires": [
            [
                "d0fe9715cc7094b6"
            ]
        ]
    },
    {
        "id": "d0fe9715cc7094b6",
        "type": "file in",
        "z": "e7c83390c801a80d",
        "g": "7c72005ea0dd4a7e",
        "name": "",
        "filename": "LatestAdmin.log",
        "format": "lines",
        "chunk": false,
        "sendError": false,
        "encoding": "utf-16le",
        "allProps": true,
        "x": 900,
        "y": 520,
        "wires": [
            [
                "92b40d863658452c"
            ]
        ]
    },
    {
        "id": "2ec098f216d0be5a",
        "type": "change",
        "z": "e7c83390c801a80d",
        "g": "7c72005ea0dd4a7e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "newadminlogs",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "left",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "right",
                "pt": "msg",
                "to": "oldadminlogs",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1280,
        "y": 520,
        "wires": [
            [
                "08afd010394fae7f"
            ]
        ]
    },
    {
        "id": "08afd010394fae7f",
        "type": "differences",
        "z": "e7c83390c801a80d",
        "g": "7c72005ea0dd4a7e",
        "name": "",
        "leftInput": "left",
        "leftInputType": "msg",
        "rightInput": "right",
        "rightInputType": "msg",
        "func": "-",
        "outputType": "msg",
        "output": "payload",
        "x": 1470,
        "y": 520,
        "wires": [
            [
                "fac8dec16290c99a"
            ]
        ]
    },
    {
        "id": "fac8dec16290c99a",
        "type": "switch",
        "z": "e7c83390c801a80d",
        "g": "7c72005ea0dd4a7e",
        "name": "",
        "property": "payload.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lte",
                "v": "100",
                "vt": "str"
            },
            {
                "t": "gt",
                "v": "100",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 610,
        "y": 580,
        "wires": [
            [
                "9db907a0124a52fa"
            ],
            [
                "a42794e6eceb5773"
            ]
        ]
    },
    {
        "id": "9db907a0124a52fa",
        "type": "split",
        "z": "e7c83390c801a80d",
        "g": "7c72005ea0dd4a7e",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 790,
        "y": 580,
        "wires": [
            [
                "a42794e6eceb5773",
                "6da5b1a2028ab12b"
            ]
        ]
    },
    {
        "id": "a42794e6eceb5773",
        "type": "change",
        "z": "e7c83390c801a80d",
        "g": "7c72005ea0dd4a7e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "oldadminlogs",
                "pt": "flow",
                "to": "newadminlogs",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 980,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "6da5b1a2028ab12b",
        "type": "function",
        "z": "e7c83390c801a80d",
        "g": "7c72005ea0dd4a7e",
        "name": "Format Message - Admin",
        "func": "var a = msg.payload\n\n\nvar time = a.substr(0, 19);\nvar ID = a.substr(22, 17);\nvar name = a.substr(a.indexOf(\":\",22)+1,(a.indexOf(\"(\",a.indexOf(\":\",22))-1)-a.indexOf(\":\",22));\nvar command = a.substring(a.indexOf(\"Command: '\")+10, a.lastIndexOf(\"'\"));\n\nmsg.payload = \"```yaml\\nTime: [\" + time + \"] ID: [\" + ID + \"] Name: [\" + name + \"] Command: [\" + command + \"]\\n```\";\n\nmsg.channel = \"884544363231850557\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1430,
        "y": 580,
        "wires": [
            [
                "279676a4af56caf6"
            ]
        ]
    },
    {
        "id": "9694163503016321",
        "type": "inject",
        "z": "e7c83390c801a80d",
        "g": "f0dc09849048ecc9",
        "name": "Stop Tail",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 320,
        "y": 100,
        "wires": [
            [
                "aaea852441b4bcfe"
            ]
        ],
        "info": "Stops all infinite FTP Loops by setting flow.tail condition to false."
    },
    {
        "id": "aaea852441b4bcfe",
        "type": "change",
        "z": "e7c83390c801a80d",
        "g": "f0dc09849048ecc9",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "tail",
                "pt": "flow",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 490,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "81c0221d45cd243f",
        "type": "debug",
        "z": "e7c83390c801a80d",
        "g": "f0dc09849048ecc9",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1370,
        "y": 240,
        "wires": []
    },
    {
        "id": "e336f1bc7a2630db",
        "type": "debug",
        "z": "e7c83390c801a80d",
        "g": "f0dc09849048ecc9",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 770,
        "y": 300,
        "wires": []
    },
    {
        "id": "8a9fff92d43419ec",
        "type": "comment",
        "z": "e7c83390c801a80d",
        "g": "7c72005ea0dd4a7e",
        "name": "Get latest admin log file.",
        "info": "",
        "x": 440,
        "y": 460,
        "wires": []
    },
    {
        "id": "75875d1a13c4f3ef",
        "type": "function",
        "z": "e7c83390c801a80d",
        "g": "b36a1ae7d14f8198",
        "name": "Download Lates Chat Log",
        "func": "function timeout(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nvar dir = flow.get(\"workingDir\");\nvar host = flow.get(\"host\");\nvar port = flow.get(\"port\");\nvar username = flow.get(\"username\");\nvar password = flow.get(\"password\");\n\nconst client = new ftp.Client()\nclient.ftp.verbose = true;\nflow.set(\"tail\", true);\ntry {\n    await client.access({\n        host: host,\n        port: port,\n        user: username,\n        password: password\n    })\n    msg.connection = await(\"Download Chat Log: Connection Open\");\n    await client.ensureDir(dir);\n    while (flow.get(\"tail\")) {\n        var latestLogfileName = flow.get(\"LatestChatFile\");\n        await client.downloadTo(\"LatestChat.log\", latestLogfileName);\n        msg.payload = await(\"Downloaded file.\");\n        node.send(msg);\n        await timeout(2000);\n    }\n}\ncatch (err) {\n    console.log(err)\n    return err;\n}\nclient.close()\nmsg.payload = \"Connection Closed.\";\nmsg.connection = \"Download Chat Log: Connection Closed\";\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "ftp",
                "module": "basic-ftp"
            }
        ],
        "x": 670,
        "y": 800,
        "wires": [
            [
                "26ed40633166e090"
            ]
        ]
    },
    {
        "id": "7566bd08b9e5dd36",
        "type": "change",
        "z": "e7c83390c801a80d",
        "g": "7c72005ea0dd4a7e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "tail",
                "pt": "flow",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 450,
        "y": 520,
        "wires": [
            [
                "c6fea49f09e43e45"
            ]
        ]
    },
    {
        "id": "64cabd24ce831c11",
        "type": "change",
        "z": "e7c83390c801a80d",
        "g": "b36a1ae7d14f8198",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "tail",
                "pt": "flow",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 800,
        "wires": [
            [
                "75875d1a13c4f3ef"
            ]
        ]
    },
    {
        "id": "9ab74c06076ff7af",
        "type": "change",
        "z": "e7c83390c801a80d",
        "g": "f13b70955d462e75",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "tail",
                "pt": "flow",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 1180,
        "wires": [
            [
                "18d91639341a4f7e"
            ]
        ]
    },
    {
        "id": "18d91639341a4f7e",
        "type": "function",
        "z": "e7c83390c801a80d",
        "g": "f13b70955d462e75",
        "name": "Download Lates Kill Log",
        "func": "function timeout(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nvar dir = flow.get(\"workingDir\");\nvar host = flow.get(\"host\");\nvar port = flow.get(\"port\");\nvar username = flow.get(\"username\");\nvar password = flow.get(\"password\");\n\nconst client = new ftp.Client()\nclient.ftp.verbose = true;\nflow.set(\"tail\", true);\ntry {\n    await client.access({\n        host: host,\n        port: port,\n        user: username,\n        password: password\n    })\n    await client.ensureDir(dir);\n    msg.connection = await(\"Download Kill Log: Connection Open\");\n    while (flow.get(\"tail\")) {\n        var latestLogfileName = flow.get(\"LatestKillFile\");\n        await client.downloadTo(\"LatestKill.log\", latestLogfileName);\n        msg.payload = await(\"Downloaded file.\");\n        node.send(msg);\n        await timeout(2000);\n    }\n}\ncatch (err) {\n    console.log(err)\n    return err;\n}\nclient.close()\nmsg.payload = \"Download Kill Log: Connection Closed.\"\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "ftp",
                "module": "basic-ftp"
            }
        ],
        "x": 670,
        "y": 1180,
        "wires": [
            [
                "d10b4e684138237a"
            ]
        ]
    },
    {
        "id": "20216e30d555c1c3",
        "type": "change",
        "z": "e7c83390c801a80d",
        "g": "d31b319e0a98a425",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "tail",
                "pt": "flow",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 490,
        "y": 1520,
        "wires": [
            [
                "bab81dca438f4064"
            ]
        ]
    },
    {
        "id": "bab81dca438f4064",
        "type": "function",
        "z": "e7c83390c801a80d",
        "g": "d31b319e0a98a425",
        "name": "Download Lates Login Log",
        "func": "function timeout(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nvar dir = flow.get(\"workingDir\");\nvar host = flow.get(\"host\");\nvar port = flow.get(\"port\");\nvar username = flow.get(\"username\");\nvar password = flow.get(\"password\");\n\nconst client = new ftp.Client()\nclient.ftp.verbose = true;\nflow.set(\"tail\", true);\ntry {\n    await client.access({\n        host: host,\n        port: port,\n        user: username,\n        password: password\n    })\n    await client.ensureDir(dir);\n    msg.connection = await(\"Download Login Log: Connection Open\");\n    while (flow.get(\"tail\")) {\n        var latestLogfileName = flow.get(\"LatestLoginFile\");\n        await client.downloadTo(\"LatestLogin.log\", latestLogfileName);\n        msg.payload = await(\"Downloaded file.\");\n        node.send(msg);\n        await timeout(2000);\n    }\n}\ncatch (err) {\n    console.log(err)\n    return err;\n}\nclient.close()\nmsg.payload = \"Download Login Log: Connection Closed.\"\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "ftp",
                "module": "basic-ftp"
            }
        ],
        "x": 700,
        "y": 1520,
        "wires": [
            [
                "c80b73112ee98a88"
            ]
        ]
    },
    {
        "id": "bc99d8736192c469",
        "type": "change",
        "z": "e7c83390c801a80d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "tail",
                "pt": "flow",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 2220,
        "wires": [
            [
                "c34bc74925505dfc"
            ]
        ]
    },
    {
        "id": "c34bc74925505dfc",
        "type": "function",
        "z": "e7c83390c801a80d",
        "g": "6eb98fdfabd2b89e",
        "name": "Download Mine Chat Log",
        "func": "function timeout(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nvar dir = flow.get(\"workingDir\");\nvar host = flow.get(\"host\");\nvar port = flow.get(\"port\");\nvar username = flow.get(\"username\");\nvar password = flow.get(\"password\");\n\nconst client = new ftp.Client()\nclient.ftp.verbose = true;\nflow.set(\"tail\", true);\ntry {\n    await client.access({\n        host: host,\n        port: port,\n        user: username,\n        password: password\n    })\n    await client.ensureDir(dir);\n    msg.connection = await(\"Download Mine Log: Connection Open\");\n    while (flow.get(\"tail\")) {\n        var latestLogfileName = flow.get(\"LatestMinesFile\");\n        await client.downloadTo(\"LatestMines.log\", latestLogfileName);\n        msg.payload = await(\"Downloaded file.\");\n        node.send(msg);\n        await timeout(2000);\n    }\n}\ncatch (err) {\n    console.log(err)\n    return err;\n}\nclient.close()\nmsg.payload = \"Download Mine Log: Connection Closed.\"\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "ftp",
                "module": "basic-ftp"
            }
        ],
        "x": 670,
        "y": 2220,
        "wires": [
            [
                "ddfc03d28f1f9009"
            ]
        ]
    },
    {
        "id": "b427359c5603a0d9",
        "type": "change",
        "z": "e7c83390c801a80d",
        "g": "12435dd0704ed692",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "tail",
                "pt": "flow",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 2540,
        "wires": [
            [
                "dee631859d5073ed"
            ]
        ]
    },
    {
        "id": "dee631859d5073ed",
        "type": "function",
        "z": "e7c83390c801a80d",
        "g": "12435dd0704ed692",
        "name": "Download Lates Violations Log",
        "func": "function timeout(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nvar dir = flow.get(\"workingDir\");\nvar host = flow.get(\"host\");\nvar port = flow.get(\"port\");\nvar username = flow.get(\"username\");\nvar password = flow.get(\"password\");\n\nconst client = new ftp.Client()\nclient.ftp.verbose = true;\nflow.set(\"tail\", true);\ntry {\n    await client.access({\n        host: host,\n        port: port,\n        user: username,\n        password: password\n    })\n    await client.ensureDir(dir);\n    msg.connection = await(\"Download Violations Log: Connection Open\");\n    while (flow.get(\"tail\")) {\n        var latestLogfileName = flow.get(\"LatestViolationsFile\");\n        await client.downloadTo(\"LatestViolations.log\", latestLogfileName);\n        msg.payload = await(\"Downloaded file.\");\n        node.send(msg);\n        await timeout(2000);\n    }\n}\ncatch (err) {\n    console.log(err)\n    return err;\n}\nclient.close()\nmsg.payload = \"Download Violations Log: Connection Closed.\"\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "ftp",
                "module": "basic-ftp"
            }
        ],
        "x": 690,
        "y": 2540,
        "wires": [
            [
                "ef5898da0ef9c5c2"
            ]
        ]
    },
    {
        "id": "edec9c71bb1fce3f",
        "type": "debug",
        "z": "e7c83390c801a80d",
        "name": "Total New Chat Messages",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1770,
        "y": 800,
        "wires": []
    },
    {
        "id": "3650b8fff823bbbc",
        "type": "debug",
        "z": "e7c83390c801a80d",
        "g": "f0dc09849048ecc9",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1000,
        "y": 120,
        "wires": []
    },
    {
        "id": "7e29626803283419",
        "type": "ui_button",
        "z": "e7c83390c801a80d",
        "g": "3af95fce94a57f18",
        "name": "",
        "group": "9e88f1a55d60cdcd",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Fetch Settings",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "topic",
        "topicType": "msg",
        "x": 1820,
        "y": 60,
        "wires": [
            [
                "2d9ca9775b011638",
                "7aa28086f0582e47",
                "36c84a4cc647dda4",
                "befffd200c2bc714",
                "03ccdf7e64773ab5",
                "6c38e2ac9c58cc31",
                "21061d176baf0bbf",
                "bbac4561d745a0c1",
                "f246e5d69658806a",
                "6a4d348a423e1491",
                "c36899829074bf13",
                "4a823e8a271ef33d",
                "bd26f7462b25a921",
                "3c6be5f5d7764be0",
                "deac0eb31c130764",
                "a48c2aed6e6dc586",
                "c0020d3cc162ec19"
            ]
        ]
    },
    {
        "id": "800538f92f1793bd",
        "type": "comment",
        "z": "cf6783623c678570",
        "name": "Future use: queue messages if TCP disconnected",
        "info": "",
        "x": 1000,
        "y": 620,
        "wires": []
    },
    {
        "id": "7f538c301c91ea60",
        "type": "inject",
        "z": "e7c83390c801a80d",
        "g": "6eb98fdfabd2b89e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "2021.09.18-01.21.43: '76561198028119944:The Punisher(96)' disarmed trap on location(0.000000. 0.000000, -1000.000000)",
        "payloadType": "str",
        "x": 1240,
        "y": 2360,
        "wires": [
            [
                "e5a769887b87fd39"
            ]
        ]
    },
    {
        "id": "18e914640cedbac5",
        "type": "ui_text_input",
        "z": "444ae17e1e6afb91",
        "g": "a385aff966834226",
        "name": "",
        "label": "Pack Name",
        "tooltip": "",
        "group": "ae3d3697f35388c4",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "topicType": "msg",
        "x": 3270,
        "y": 120,
        "wires": [
            [
                "982eb7c5a3f9f53b"
            ]
        ]
    },
    {
        "id": "e4fe920b0cd44ada",
        "type": "ui_text_input",
        "z": "444ae17e1e6afb91",
        "g": "a385aff966834226",
        "name": "",
        "label": "FP Cost",
        "tooltip": "",
        "group": "ae3d3697f35388c4",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "topicType": "msg",
        "x": 3260,
        "y": 200,
        "wires": [
            [
                "7a74cec96c8ef7f8"
            ]
        ]
    },
    {
        "id": "794c568543378215",
        "type": "ui_text_input",
        "z": "444ae17e1e6afb91",
        "g": "a385aff966834226",
        "name": "",
        "label": "Item/Vehicle in-game code",
        "tooltip": "i.e 'BP_Weapon_AK47'",
        "group": "ae3d3697f35388c4",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "topicType": "msg",
        "x": 3320,
        "y": 240,
        "wires": [
            [
                "bba79bf7d7eecca6"
            ]
        ]
    },
    {
        "id": "9d119de6ad3207ed",
        "type": "ui_text_input",
        "z": "444ae17e1e6afb91",
        "g": "a385aff966834226",
        "name": "",
        "label": "Quantity",
        "tooltip": "",
        "group": "ae3d3697f35388c4",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "topicType": "msg",
        "x": 3260,
        "y": 280,
        "wires": [
            [
                "470a2542d36d6fac"
            ]
        ]
    },
    {
        "id": "54857812edf230f3",
        "type": "ui_dropdown",
        "z": "444ae17e1e6afb91",
        "g": "a385aff966834226",
        "name": "",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "ae3d3697f35388c4",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Item",
                "value": "item",
                "type": "str"
            },
            {
                "label": "Vehicle",
                "value": "vehicle",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "x": 3260,
        "y": 160,
        "wires": [
            [
                "99a18ec8092a1dd4"
            ]
        ]
    },
    {
        "id": "d254c30c3bba185b",
        "type": "ui_button",
        "z": "444ae17e1e6afb91",
        "g": "a385aff966834226",
        "name": "",
        "group": "ae3d3697f35388c4",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Submit",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 3260,
        "y": 360,
        "wires": [
            [
                "df5a81c626d2b2a0"
            ]
        ]
    },
    {
        "id": "adc0dcd597f58d82",
        "type": "ui_table",
        "z": "444ae17e1e6afb91",
        "g": "bb2eaf1e481b717d",
        "group": "f28a28bd30b4460a",
        "name": "",
        "order": 1,
        "width": "24",
        "height": "10",
        "columns": [
            {
                "field": "name",
                "title": "Pack Name",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "type",
                "title": "Pack Type",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "fpCost",
                "title": "FP Cost",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "code",
                "title": "Item/Vehicle Code",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "quantity",
                "title": "Quantity",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "imageURL",
                "title": "Image URL",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 4810,
        "y": 120,
        "wires": []
    },
    {
        "id": "11c786d4f504a1dc",
        "type": "ui_text_input",
        "z": "444ae17e1e6afb91",
        "g": "a385aff966834226",
        "name": "",
        "label": "Pack Image URL",
        "tooltip": "",
        "group": "ae3d3697f35388c4",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "topicType": "msg",
        "x": 3290,
        "y": 320,
        "wires": [
            [
                "5bdc18da5d68d744"
            ]
        ]
    },
    {
        "id": "7569842078811ca7",
        "type": "ui_button",
        "z": "444ae17e1e6afb91",
        "g": "bb2eaf1e481b717d",
        "name": "",
        "group": "f28a28bd30b4460a",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Refresh Table Contents",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 4230,
        "y": 120,
        "wires": [
            [
                "da969102e4250c22"
            ]
        ]
    },
    {
        "id": "d615305222b77a03",
        "type": "sqlite",
        "z": "444ae17e1e6afb91",
        "g": "a385aff966834226",
        "mydb": "2118590cbe579670",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 3940,
        "y": 520,
        "wires": [
            [
                "da969102e4250c22"
            ]
        ]
    },
    {
        "id": "da969102e4250c22",
        "type": "function",
        "z": "444ae17e1e6afb91",
        "g": "bb2eaf1e481b717d",
        "name": "",
        "func": "msg.topic = \"SELECT * FROM packs\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4460,
        "y": 120,
        "wires": [
            [
                "dcedf4d73eeaec08"
            ]
        ]
    },
    {
        "id": "f9cd1cf436052c68",
        "type": "function",
        "z": "e7c83390c801a80d",
        "g": "59f969dbefde3c20",
        "name": "CREATE Tables",
        "func": "msg.topic = \"CREATE TABLE IF NOT EXISTS packs (name TEXT PRIMARY KEY, type TEXT, fpCost INTEGER, code TEXT, quantity INTEGER, imageURL TEXT);\";\nreturn msg;\n\n//CREATE TABLE IF NOT EXISTS discordUser (discordID INTEGER PRIMARY KEY, registrationID TEXT, registered BOOL);",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2920,
        "y": 1880,
        "wires": [
            [
                "ae718095be210f28"
            ]
        ]
    },
    {
        "id": "982eb7c5a3f9f53b",
        "type": "change",
        "z": "444ae17e1e6afb91",
        "g": "a385aff966834226",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "UITempPackName",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3580,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "99a18ec8092a1dd4",
        "type": "change",
        "z": "444ae17e1e6afb91",
        "g": "a385aff966834226",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "UITempPackItemType",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3590,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "7a74cec96c8ef7f8",
        "type": "change",
        "z": "444ae17e1e6afb91",
        "g": "a385aff966834226",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "UITempPackFPCost",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3580,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "bba79bf7d7eecca6",
        "type": "change",
        "z": "444ae17e1e6afb91",
        "g": "a385aff966834226",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "UITempPackCode",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3570,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "470a2542d36d6fac",
        "type": "change",
        "z": "444ae17e1e6afb91",
        "g": "a385aff966834226",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "UITempPackQuantity",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3580,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "5bdc18da5d68d744",
        "type": "change",
        "z": "444ae17e1e6afb91",
        "g": "a385aff966834226",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "UITempPackImageURL",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3590,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "df5a81c626d2b2a0",
        "type": "function",
        "z": "444ae17e1e6afb91",
        "g": "a385aff966834226",
        "name": "Check user input and construct payload object",
        "func": "var packName = flow.get(\"UITempPackName\");\nvar packItemType = flow.get(\"UITempPackItemType\");\nvar packFPCost = flow.get(\"UITempPackFPCost\");\nvar packItemCode = flow.get(\"UITempPackCode\");\nvar packQuantity = flow.get(\"UITempPackQuantity\");\nvar packImageURL = flow.get(\"UITempPackImageURL\");\n\nif(!packName){\n    node.error(\"packName is empty\",msg)\n    return null; //halt flow\n}\nif(!packItemType){\n    node.error(\"packItemType is empty\",msg)\n    return null; //halt flow\n}\nif(!packFPCost){\n    node.error(\"packFPCost is empty\",msg)\n    return null; //halt flow\n}\nif(!packItemCode){\n    node.error(\"packItemCode is empty\",msg)\n    return null; //halt flow\n}\nif(!packQuantity){\n    node.error(\"packQuantity is empty\",msg)\n    return null; //halt flow\n}\nif(!packImageURL){\n    node.error(\"packImageURL is empty\",msg)\n    return null; //halt flow\n}\n\nmsg.payload = [\n    {\n        \"packName\": packName,\n        \"packItemType\": packItemType,\n        \"packFPCost\":   packFPCost,\n        \"packItemCode\":  packItemCode,\n        \"packQuantity\":  packQuantity,\n        \"packImageURL\":  packImageURL\n    }\n]\n//temporary debug - set payload with string version for demo notification\n\n//msg.payload = \"All fields OK. This is what varbinds contains...\\n\" +  JSON.stringify(msg.varbinds);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3640,
        "y": 360,
        "wires": [
            [
                "b709502fa82e7fb6",
                "b85a03d2b15f6cdd",
                "f59a1a21cb88911e"
            ]
        ]
    },
    {
        "id": "b709502fa82e7fb6",
        "type": "ui_toast",
        "z": "444ae17e1e6afb91",
        "g": "a385aff966834226",
        "position": "top right",
        "displayTime": "4",
        "highlight": "green",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "topic": "",
        "name": "",
        "x": 3670,
        "y": 440,
        "wires": []
    },
    {
        "id": "b85a03d2b15f6cdd",
        "type": "debug",
        "z": "444ae17e1e6afb91",
        "g": "a385aff966834226",
        "name": "To SNMP (view result in debug window)",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3740,
        "y": 480,
        "wires": []
    },
    {
        "id": "f59a1a21cb88911e",
        "type": "function",
        "z": "444ae17e1e6afb91",
        "g": "a385aff966834226",
        "name": "create new pack in DB",
        "func": "msg.topic = \"INSERT INTO packs (name, type, fpCost, code, quantity, imageURL) values(\\'\" + msg.payload[0].packName + \"\\', '\" + msg.payload[0].packItemType +\"', \" + msg.payload[0].packFPCost + \", \\'\" + msg.payload[0].packItemCode +  \"', \" + msg.payload[0].packQuantity + \", \\'\" + msg.payload[0].packImageURL + \"\\')\";\nmsg.payload = \"\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3680,
        "y": 520,
        "wires": [
            [
                "d615305222b77a03"
            ]
        ]
    },
    {
        "id": "dcedf4d73eeaec08",
        "type": "sqlite",
        "z": "444ae17e1e6afb91",
        "g": "bb2eaf1e481b717d",
        "mydb": "2118590cbe579670",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 4640,
        "y": 120,
        "wires": [
            [
                "adc0dcd597f58d82"
            ]
        ]
    },
    {
        "id": "dcc445435d0741ae",
        "type": "ui_toast",
        "z": "444ae17e1e6afb91",
        "position": "top right",
        "displayTime": "5",
        "highlight": "red",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "topic": "Error",
        "name": "",
        "x": 4810,
        "y": 800,
        "wires": []
    },
    {
        "id": "1fa83291d69b35e2",
        "type": "function",
        "z": "444ae17e1e6afb91",
        "name": "Check user input and construct payload object",
        "func": "if (msg.error.message == \"Error: SQLITE_CONSTRAINT: UNIQUE constraint failed: packs.name\"){\n    msg.payload = \"Pack name already in use\";\n    return msg; //halt flow\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4500,
        "y": 800,
        "wires": [
            [
                "dcc445435d0741ae"
            ]
        ]
    },
    {
        "id": "c27189250ed12365",
        "type": "catch",
        "z": "444ae17e1e6afb91",
        "name": "",
        "scope": [
            "d615305222b77a03"
        ],
        "uncaught": false,
        "x": 4230,
        "y": 800,
        "wires": [
            [
                "1700e8c17a846540",
                "1fa83291d69b35e2"
            ]
        ]
    },
    {
        "id": "1700e8c17a846540",
        "type": "debug",
        "z": "444ae17e1e6afb91",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4390,
        "y": 860,
        "wires": []
    },
    {
        "id": "bfb459561644e0cc",
        "type": "comment",
        "z": "444ae17e1e6afb91",
        "g": "a385aff966834226",
        "name": "Add Pack UI",
        "info": "",
        "x": 3270,
        "y": 60,
        "wires": []
    },
    {
        "id": "74bc674ecd0193ed",
        "type": "ui_text_input",
        "z": "444ae17e1e6afb91",
        "g": "cd48672b90f76112",
        "name": "",
        "label": "Pack Name",
        "tooltip": "",
        "group": "6c1321da21bc9f11",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "topicType": "msg",
        "x": 3270,
        "y": 700,
        "wires": [
            [
                "1ee8dc5c40ef4155"
            ]
        ]
    },
    {
        "id": "3dae50d5e1def5b3",
        "type": "ui_button",
        "z": "444ae17e1e6afb91",
        "g": "cd48672b90f76112",
        "name": "",
        "group": "6c1321da21bc9f11",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Delete",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 3250,
        "y": 760,
        "wires": [
            [
                "538d0fd533731f2f"
            ]
        ]
    },
    {
        "id": "347ab5e3c4d9500e",
        "type": "sqlite",
        "z": "444ae17e1e6afb91",
        "g": "cd48672b90f76112",
        "mydb": "2118590cbe579670",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 3940,
        "y": 1100,
        "wires": [
            [
                "da969102e4250c22"
            ]
        ]
    },
    {
        "id": "1ee8dc5c40ef4155",
        "type": "change",
        "z": "444ae17e1e6afb91",
        "g": "cd48672b90f76112",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "UITempPackNameDelete",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3600,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "538d0fd533731f2f",
        "type": "function",
        "z": "444ae17e1e6afb91",
        "g": "cd48672b90f76112",
        "name": "Check user input and construct payload object",
        "func": "var packNameDelete = flow.get(\"UITempPackNameDelete\");\n\nif(!packNameDelete){\n    node.error(\"Pack Name is empty\",msg)\n    return null; //halt flow\n}\n\nmsg.payload = [\n    {\n        \"packNameDelete\": packNameDelete\n    }\n]\n//temporary debug - set payload with string version for demo notification\n\n//msg.payload = \"All fields OK. This is what varbinds contains...\\n\" +  JSON.stringify(msg.varbinds);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3640,
        "y": 760,
        "wires": [
            [
                "6146edfe8cde5ffe",
                "6ec2070892db473e",
                "dded4729d682b528"
            ]
        ]
    },
    {
        "id": "6146edfe8cde5ffe",
        "type": "ui_toast",
        "z": "444ae17e1e6afb91",
        "g": "cd48672b90f76112",
        "position": "top right",
        "displayTime": "4",
        "highlight": "green",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "topic": "",
        "name": "",
        "x": 3670,
        "y": 1020,
        "wires": []
    },
    {
        "id": "6ec2070892db473e",
        "type": "debug",
        "z": "444ae17e1e6afb91",
        "g": "cd48672b90f76112",
        "name": "To SNMP (view result in debug window)",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3740,
        "y": 1060,
        "wires": []
    },
    {
        "id": "dded4729d682b528",
        "type": "function",
        "z": "444ae17e1e6afb91",
        "g": "cd48672b90f76112",
        "name": "delete pack from DB",
        "func": "msg.topic = \"DELETE FROM packs WHERE name = \\\"\" + msg.payload[0].packNameDelete + \"\\\";\";\nmsg.payload = \"\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3680,
        "y": 1100,
        "wires": [
            [
                "347ab5e3c4d9500e"
            ]
        ]
    },
    {
        "id": "32cc00b3781fce1a",
        "type": "comment",
        "z": "444ae17e1e6afb91",
        "g": "cd48672b90f76112",
        "name": "Delete Pack UI",
        "info": "",
        "x": 3280,
        "y": 640,
        "wires": []
    },
    {
        "id": "23c4a386f2b9b724",
        "type": "comment",
        "z": "444ae17e1e6afb91",
        "g": "bb2eaf1e481b717d",
        "name": "Pack Table UI",
        "info": "",
        "x": 4190,
        "y": 60,
        "wires": []
    },
    {
        "id": "ee2ec6f85b4450f5",
        "type": "sqlite",
        "z": "444ae17e1e6afb91",
        "g": "4d2d08a55c9a69ac",
        "mydb": "2118590cbe579670",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 2080,
        "y": 1000,
        "wires": [
            [
                "4d845909b0f03edf"
            ]
        ]
    },
    {
        "id": "4d845909b0f03edf",
        "type": "switch",
        "z": "444ae17e1e6afb91",
        "g": "4d2d08a55c9a69ac",
        "name": "",
        "property": "payload.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "else"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2270,
        "y": 1000,
        "wires": [
            [
                "9b906524a06e1441",
                "401ca76ea342303d"
            ],
            [
                "401ca76ea342303d"
            ]
        ]
    },
    {
        "id": "5d6f4bad5ea5f6c5",
        "type": "function",
        "z": "444ae17e1e6afb91",
        "g": "27505ac0cc6d3b19",
        "name": "update FP balance",
        "func": "msg.payload = '#SetFamePoints ' + msg.newBalance + ' ' + msg.userDetails[0].steamId;\nmsg.deliveryStatus = \"processed\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1930,
        "y": 1240,
        "wires": [
            [
                "aaa6cc45f419ba46",
                "c911001fb974c206"
            ]
        ]
    },
    {
        "id": "c911001fb974c206",
        "type": "debug",
        "z": "444ae17e1e6afb91",
        "g": "27505ac0cc6d3b19",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2170,
        "y": 1280,
        "wires": []
    },
    {
        "id": "aaa6cc45f419ba46",
        "type": "link out",
        "z": "444ae17e1e6afb91",
        "g": "27505ac0cc6d3b19",
        "name": "",
        "links": [
            "60ae93f7a2d7c381"
        ],
        "x": 2235,
        "y": 1320,
        "wires": []
    },
    {
        "id": "b6257d163b4debaa",
        "type": "function",
        "z": "444ae17e1e6afb91",
        "g": "27505ac0cc6d3b19",
        "name": "send delivery",
        "func": "var instruction;\n\nif (msg.itemDetails[0].type == \"vehicle\"){\n    instruction = \"#SpawnVehicle \";\n} \n\nif (msg.itemDetails[0].type == \"item\"){\n    instruction = \"#SpawnItem \";\n}\nmsg.payload = instruction + ' ' + msg.itemDetails[0].code + ' ' + msg.itemDetails[0].quantity + ' Location ' + msg.userDetails[0].steamId;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1910,
        "y": 1300,
        "wires": [
            [
                "aaa6cc45f419ba46",
                "c911001fb974c206"
            ]
        ]
    },
    {
        "id": "017bd3dc1581d8e7",
        "type": "debug",
        "z": "cf6783623c678570",
        "g": "c58defa34619bed1",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1110,
        "y": 60,
        "wires": []
    },
    {
        "id": "52cbc964c738cf21",
        "type": "comment",
        "z": "444ae17e1e6afb91",
        "g": "27505ac0cc6d3b19",
        "name": "Deliver Order and Update FP Balance",
        "info": "",
        "x": 2000,
        "y": 1160,
        "wires": []
    },
    {
        "id": "2d9ca9775b011638",
        "type": "change",
        "z": "e7c83390c801a80d",
        "g": "3af95fce94a57f18",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "serverProvider",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1960,
        "y": 100,
        "wires": [
            [
                "c9bdc4eeb83f3a71"
            ]
        ]
    },
    {
        "id": "7aa28086f0582e47",
        "type": "change",
        "z": "e7c83390c801a80d",
        "g": "3af95fce94a57f18",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "host",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1960,
        "y": 140,
        "wires": [
            [
                "ec49dc01b583d0e4"
            ]
        ]
    },
    {
        "id": "36c84a4cc647dda4",
        "type": "change",
        "z": "e7c83390c801a80d",
        "g": "3af95fce94a57f18",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "port",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1960,
        "y": 180,
        "wires": [
            [
                "517bbb6d2e99fc3f"
            ]
        ]
    },
    {
        "id": "befffd200c2bc714",
        "type": "change",
        "z": "e7c83390c801a80d",
        "g": "3af95fce94a57f18",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "username",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1960,
        "y": 220,
        "wires": [
            [
                "5cdbc691e12d63c8"
            ]
        ]
    },
    {
        "id": "03ccdf7e64773ab5",
        "type": "change",
        "z": "e7c83390c801a80d",
        "g": "3af95fce94a57f18",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "password",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1960,
        "y": 260,
        "wires": [
            [
                "31c44dd228ad333a"
            ]
        ]
    },
    {
        "id": "6c38e2ac9c58cc31",
        "type": "change",
        "z": "e7c83390c801a80d",
        "g": "f2e3944ec2e98a49",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "channelIDAdmin",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2000,
        "y": 640,
        "wires": [
            [
                "7503c43e3cd8e8cd"
            ]
        ]
    },
    {
        "id": "21061d176baf0bbf",
        "type": "change",
        "z": "e7c83390c801a80d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "channelIDChat",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2000,
        "y": 680,
        "wires": [
            [
                "6d034e37778169b5"
            ]
        ]
    },
    {
        "id": "4ddb0b41a3a8da7c",
        "type": "change",
        "z": "e7c83390c801a80d",
        "g": "f2e3944ec2e98a49",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "channelIDGlobalChat",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2000,
        "y": 720,
        "wires": [
            [
                "3a043ad22e6494c3"
            ]
        ]
    },
    {
        "id": "bbac4561d745a0c1",
        "type": "change",
        "z": "e7c83390c801a80d",
        "g": "f2e3944ec2e98a49",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "channelIDKill",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2000,
        "y": 760,
        "wires": [
            [
                "d088580c23909a11"
            ]
        ]
    },
    {
        "id": "f246e5d69658806a",
        "type": "change",
        "z": "e7c83390c801a80d",
        "g": "f2e3944ec2e98a49",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "channelIDLogin",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2000,
        "y": 800,
        "wires": [
            [
                "b1baf05ee55dcecd"
            ]
        ]
    },
    {
        "id": "6a4d348a423e1491",
        "type": "change",
        "z": "e7c83390c801a80d",
        "g": "f2e3944ec2e98a49",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "channelIDMines",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2000,
        "y": 840,
        "wires": [
            [
                "8c3a31adf4cfee8a"
            ]
        ]
    },
    {
        "id": "c36899829074bf13",
        "type": "change",
        "z": "e7c83390c801a80d",
        "g": "f2e3944ec2e98a49",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "channelIDViolations",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2000,
        "y": 880,
        "wires": [
            [
                "cb64b9f593018214"
            ]
        ]
    },
    {
        "id": "4a823e8a271ef33d",
        "type": "change",
        "z": "e7c83390c801a80d",
        "g": "f2e3944ec2e98a49",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "channelIDPvP",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2000,
        "y": 920,
        "wires": [
            [
                "a1a35aa4a95f4777"
            ]
        ]
    },
    {
        "id": "bd26f7462b25a921",
        "type": "change",
        "z": "e7c83390c801a80d",
        "g": "d3b5dcf1216195f0",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "BotSteamID",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2000,
        "y": 1260,
        "wires": [
            [
                "b2ef73b93b171a38"
            ]
        ]
    },
    {
        "id": "3c6be5f5d7764be0",
        "type": "change",
        "z": "e7c83390c801a80d",
        "g": "0a693ed80d2f4120",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "BatMetServerID",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2800,
        "y": 640,
        "wires": [
            [
                "71b5dff00ed10042"
            ]
        ]
    },
    {
        "id": "deac0eb31c130764",
        "type": "change",
        "z": "e7c83390c801a80d",
        "g": "0a693ed80d2f4120",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "BatMetChannel",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2800,
        "y": 680,
        "wires": [
            [
                "a16c87c58967aa49"
            ]
        ]
    },
    {
        "id": "a48c2aed6e6dc586",
        "type": "change",
        "z": "e7c83390c801a80d",
        "g": "0a693ed80d2f4120",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "BatMetThumb",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2800,
        "y": 720,
        "wires": [
            [
                "e401ee9388a4e28d"
            ]
        ]
    },
    {
        "id": "cc477b5ed883ae03",
        "type": "delay",
        "z": "cf6783623c678570",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "x": 1170,
        "y": 360,
        "wires": [
            [
                "2bc086dd1d0e8d27",
                "2e934c59d7669df7",
                "d3f910337df66915"
            ]
        ]
    },
    {
        "id": "401ca76ea342303d",
        "type": "debug",
        "z": "444ae17e1e6afb91",
        "g": "4d2d08a55c9a69ac",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2320,
        "y": 1080,
        "wires": []
    },
    {
        "id": "c0020d3cc162ec19",
        "type": "change",
        "z": "e7c83390c801a80d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "ppFolder",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1960,
        "y": 300,
        "wires": [
            [
                "6bbb40441c8852fd"
            ]
        ]
    },
    {
        "id": "6bbb40441c8852fd",
        "type": "ui_text_input",
        "z": "e7c83390c801a80d",
        "name": "",
        "label": "PingPerfect Folder",
        "tooltip": "G-Portal Users Can just enter \"x\"",
        "group": "6363ec22c866f790",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "topicType": "msg",
        "x": 2210,
        "y": 300,
        "wires": [
            [
                "78a749b01b531955"
            ]
        ]
    },
    {
        "id": "78a749b01b531955",
        "type": "change",
        "z": "e7c83390c801a80d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "UITempPPFolder",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2470,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "dfbe641a58b09fbd",
        "type": "status",
        "z": "cf6783623c678570",
        "g": "a26a12c8442182ad",
        "name": "",
        "scope": [
            "2bc086dd1d0e8d27"
        ],
        "x": 1600,
        "y": 120,
        "wires": [
            [
                "aafa6f76d9109ab3",
                "055286a60a7df2a8"
            ]
        ]
    },
    {
        "id": "aafa6f76d9109ab3",
        "type": "debug",
        "z": "cf6783623c678570",
        "g": "a26a12c8442182ad",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1700,
        "y": 220,
        "wires": []
    },
    {
        "id": "055286a60a7df2a8",
        "type": "switch",
        "z": "cf6783623c678570",
        "g": "a26a12c8442182ad",
        "name": "",
        "property": "status.text",
        "propertyType": "msg",
        "rules": [
            {
                "t": "else"
            },
            {
                "t": "eq",
                "v": "common.status.connected",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1760,
        "y": 120,
        "wires": [
            [
                "88e25f27f1bdbe02"
            ],
            [
                "c66cbcdfd144dacc"
            ]
        ]
    },
    {
        "id": "88e25f27f1bdbe02",
        "type": "change",
        "z": "cf6783623c678570",
        "g": "a26a12c8442182ad",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "queue",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "control",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1930,
        "y": 100,
        "wires": [
            [
                "08986cca3b6b02c6"
            ]
        ]
    },
    {
        "id": "c66cbcdfd144dacc",
        "type": "change",
        "z": "cf6783623c678570",
        "g": "a26a12c8442182ad",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "open",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "control",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1930,
        "y": 140,
        "wires": [
            [
                "08986cca3b6b02c6"
            ]
        ]
    },
    {
        "id": "7db129373035932c",
        "type": "comment",
        "z": "cf6783623c678570",
        "g": "a26a12c8442182ad",
        "name": "Open/Queue on TCP Connection State",
        "info": "",
        "x": 1660,
        "y": 60,
        "wires": []
    },
    {
        "id": "3b223ac27bb8f2f8",
        "type": "debug",
        "z": "444ae17e1e6afb91",
        "g": "79fa116804b14942",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2400,
        "y": 80,
        "wires": []
    },
    {
        "id": "bf79b256c3fcb978",
        "type": "simple-queue",
        "z": "444ae17e1e6afb91",
        "name": "",
        "firstMessageBypass": true,
        "bypassInterval": "0",
        "x": 1610,
        "y": 140,
        "wires": [
            [
                "9d4b892de2d9598c",
                "8a887142bc8126b5",
                "5c9e59b139eec860"
            ]
        ]
    },
    {
        "id": "c17ff235349b0b07",
        "type": "function",
        "z": "444ae17e1e6afb91",
        "g": "4d2d08a55c9a69ac",
        "name": "Process next order",
        "func": "const newMsg = {}\nnewMsg.orderState = \"processing\";\nnewMsg.trigger = \"Next!;\"\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2890,
        "y": 940,
        "wires": [
            [
                "bf79b256c3fcb978"
            ]
        ]
    },
    {
        "id": "2e934c59d7669df7",
        "type": "function",
        "z": "cf6783623c678570",
        "name": "if order, Process next order",
        "func": "const newMsg = {}\nif (msg.deliveryStatus == \"processed\"){\nnewMsg.orderState = \"processing\";\nnewMsg.trigger = \"Next!;\"\nreturn newMsg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1400,
        "y": 440,
        "wires": [
            [
                "60a3de8393137eaa",
                "d341fb71b95159fd"
            ]
        ]
    },
    {
        "id": "d3f910337df66915",
        "type": "debug",
        "z": "cf6783623c678570",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1380,
        "y": 300,
        "wires": []
    },
    {
        "id": "60a3de8393137eaa",
        "type": "link out",
        "z": "cf6783623c678570",
        "name": "trigger next order",
        "links": [
            "d9c2c9aa4692d306"
        ],
        "x": 1625,
        "y": 440,
        "wires": []
    },
    {
        "id": "d9c2c9aa4692d306",
        "type": "link in",
        "z": "444ae17e1e6afb91",
        "name": "trigger next order",
        "links": [
            "60a3de8393137eaa"
        ],
        "x": 1495,
        "y": 360,
        "wires": [
            [
                "bf79b256c3fcb978",
                "64d76a631ac0c014"
            ]
        ]
    },
    {
        "id": "9d4b892de2d9598c",
        "type": "debug",
        "z": "444ae17e1e6afb91",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1750,
        "y": 200,
        "wires": []
    },
    {
        "id": "6f94c3079693f32e",
        "type": "inject",
        "z": "444ae17e1e6afb91",
        "name": "reset queue",
        "props": [
            {
                "p": "reset",
                "v": "reset",
                "vt": "str"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 1710,
        "y": 40,
        "wires": [
            [
                "bf79b256c3fcb978"
            ]
        ]
    },
    {
        "id": "8b10e7aa1af8362c",
        "type": "debug",
        "z": "e7c83390c801a80d",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2390,
        "y": 1800,
        "wires": []
    },
    {
        "id": "d341fb71b95159fd",
        "type": "debug",
        "z": "cf6783623c678570",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1620,
        "y": 400,
        "wires": []
    },
    {
        "id": "64d76a631ac0c014",
        "type": "debug",
        "z": "444ae17e1e6afb91",
        "name": "trigger return",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1640,
        "y": 380,
        "wires": []
    },
    {
        "id": "4618b7330e7951b0",
        "type": "debug",
        "z": "444ae17e1e6afb91",
        "name": "Join",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1530,
        "y": 40,
        "wires": []
    },
    {
        "id": "2eeb45a4aca74e7e",
        "type": "debug",
        "z": "444ae17e1e6afb91",
        "g": "79fa116804b14942",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2800,
        "y": 80,
        "wires": []
    },
    {
        "id": "333c655abf0a0027",
        "type": "debug",
        "z": "444ae17e1e6afb91",
        "g": "8b891dd4611c028d",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2140,
        "y": 700,
        "wires": []
    },
    {
        "id": "6f2b75efab86fc12",
        "type": "join",
        "z": "444ae17e1e6afb91",
        "g": "9947ed56b0b80a62",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "2",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "num",
        "reduceFixup": "",
        "x": 1390,
        "y": 80,
        "wires": [
            [
                "4618b7330e7951b0",
                "bf79b256c3fcb978"
            ]
        ]
    },
    {
        "id": "e6098bd9e86da786",
        "type": "function",
        "z": "444ae17e1e6afb91",
        "g": "9947ed56b0b80a62",
        "name": "Message ID to merge into main flow",
        "func": "msg.topic = \"discordMsg\";\nmsg.parts = \"\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 100,
        "wires": [
            [
                "6f2b75efab86fc12"
            ]
        ]
    },
    {
        "id": "28ab5a9d48e45c0c",
        "type": "inject",
        "z": "e7c83390c801a80d",
        "g": "f13b70955d462e75",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "2021.09.19-15.07.06: {\"Killer\":{\"ServerLocation\":{\"X\": 0,\"Y\": 0,\"Z\": 0},\"ClientLocation\":{\"X\": 0,\"Y\": 0,\"Z\": 0},\"IsInGameEvent\": false,\"ProfileName\": \"ZeEk-e-Boi\",\"UserId\": \"76561198032219419\",\"HasImmortality\": false},\"Victim\":{\"ServerLocation\":{\"X\": 559976.0625,\"Y\": 22364.798828125,\"Z\": 7226.72998046875},\"ClientLocation\":{\"X\": 559976.0625,\"Y\": 22364.798828125,\"Z\": 7226.72998046875},\"IsInGameEvent\": false,\"ProfileName\": \"Skokkie08\",\"UserId\": \"76561198986488481\"},\"Weapon\": \"ImprovisedMine_C_2136182657 [Explosion]\",\"TimeOfDay\": \"15:02:51\"}",
        "payloadType": "str",
        "x": 700,
        "y": 1320,
        "wires": [
            [
                "8e390dd4c4b0c4c3"
            ]
        ]
    },
    {
        "id": "4ba7d7b524cf4dd7",
        "type": "join",
        "z": "e7c83390c801a80d",
        "g": "7c72005ea0dd4a7e",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "1.5",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1130,
        "y": 520,
        "wires": [
            [
                "2ec098f216d0be5a"
            ]
        ]
    },
    {
        "id": "279676a4af56caf6",
        "type": "switch",
        "z": "e7c83390c801a80d",
        "name": "Discard \"Game version: \"",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "else"
            },
            {
                "t": "cont",
                "v": "Game version: ",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2030,
        "y": 1920,
        "wires": [
            [
                "bd24a9a6886cabfe"
            ],
            []
        ]
    },
    {
        "id": "0fc2e3479b407667",
        "type": "catch",
        "z": "e7c83390c801a80d",
        "name": "",
        "scope": [
            "bd24a9a6886cabfe"
        ],
        "uncaught": false,
        "x": 2190,
        "y": 1800,
        "wires": [
            [
                "8b10e7aa1af8362c"
            ]
        ]
    },
    {
        "id": "529f67cdf2348f26",
        "type": "catch",
        "z": "e7c83390c801a80d",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 2150,
        "y": 2300,
        "wires": [
            [
                "c5c170fe63610de1"
            ]
        ]
    },
    {
        "id": "c5c170fe63610de1",
        "type": "debug",
        "z": "e7c83390c801a80d",
        "name": "Catch All Error",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2370,
        "y": 2300,
        "wires": []
    },
    {
        "id": "92b40d863658452c",
        "type": "function",
        "z": "e7c83390c801a80d",
        "g": "7c72005ea0dd4a7e",
        "name": "",
        "func": "msg.originalLogLine = msg.payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 460,
        "wires": [
            [
                "4ba7d7b524cf4dd7"
            ]
        ]
    },
    {
        "id": "9bb2f5d70f755c29",
        "type": "inject",
        "z": "e7c83390c801a80d",
        "g": "7c72005ea0dd4a7e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "2021.09.20-12.46.26: '76561199135144674:CHAPPIE(235)' Command: 'spawnitem Water_05l 5 location \"-8785.090 244655.531 44443.738\"'",
        "payloadType": "str",
        "x": 1200,
        "y": 620,
        "wires": [
            [
                "6da5b1a2028ab12b"
            ]
        ]
    },
    {
        "id": "4cdfa87d977b96c6",
        "type": "debug",
        "z": "e7c83390c801a80d",
        "g": "f0dc09849048ecc9",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1040,
        "y": 300,
        "wires": []
    }
]